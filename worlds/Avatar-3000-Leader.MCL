<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on terça-feira, fevereiro 12, 2019, 1:26  -->
<!-- MuClient version 5.05 -->
<!-- Written by Nick Gammon -->
<!-- Home Page: http://www.mushclient.com/ -->
<muclient>
<world
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"

   auto_log_file_name="C:\MUSHclient\logs\log %Y-%m-%d .txt"
   auto_say_override_prefix="-"
   auto_say_string="say "
   beep_sound="C:\Windows\media\Windows Logon.wav"
   chat_name="Name-not-set"
   command_stack_character=";"
   id="91bf4f3258da779c609e4ca4"
   input_font_name="Courier"
   mapping_failure="Alas, you cannot go *"
   name="AvatarLeader"
   new_activity_sound="(No sound)"
   output_font_name="Courier New"
   proxy_server="127.0.0.1"
   script_editor="notepad"
   script_editor_argument="%file"
   script_filename="C:\MUSHclient\worlds\avscripts.lua"
   script_language="Lua"
   script_prefix="/"
   site="avatar.outland.org"
   spam_message="i"
   speed_walk_prefix="."
   terminal_identification="mushclient"

   arrows_change_history="y"
   auto_pause="y"
   auto_repeat="y"
   auto_resize_minimum_lines="1"
   auto_resize_maximum_lines="20"
   chat_foreground_colour="red"
   chat_background_colour="black"
   chat_port="4050"
   confirm_on_paste="y"
   confirm_on_send="y"
   convert_ga_to_newline="y"
   ctrl_z_goes_to_end_of_buffer="y"
   default_trigger_sequence="100"
   default_trigger_expand_variables="y"
   default_alias_sequence="100"
   default_alias_expand_variables="y"
   default_alias_keep_evaluating="y"
   do_not_show_outstanding_lines="y"
   display_my_input="y"
   echo_hyperlink_in_output_window="y"
   edit_script_with_notepad="y"
   enable_aliases="y"
   enable_beeps="y"
   enable_scripts="y"
   enable_spam_prevention="y"
   enable_speed_walk="y"
   enable_timers="y"
   enable_triggers="y"
   history_lines="100"
   hyperlink_adds_to_command_history="y"
   hyperlink_colour="#0080FF"
   indent_paras="y"
   input_background_colour="white"
   input_font_height="10"
   input_font_weight="400"
   input_font_charset="1"
   input_text_colour="black"
   keep_commands_on_same_line="y"
   keypad_enable="y"
   max_output_lines="300000"
   mud_can_change_link_colour="y"
   mud_can_change_options="y"
   note_text_colour="#060000"
   output_font_height="9"
   output_font_weight="400"
   output_font_charset="1"
   paste_delay_per_lines="1"
   pixel_offset="1"
   port="3000"
   proxy_port="8080"
   save_world_automatically="y"
   script_reload_option="2"
   script_errors_to_output_window="y"
   send_file_delay_per_lines="1"
   send_keep_alives="y"
   send_mxp_afk_response="y"
   show_bold="y"
   show_italic="y"
   show_underline="y"
   spam_line_count="10"
   tab_completion_lines="200"
   timestamp_input_text_colour="maroon"
   timestamp_notes_text_colour="blue"
   timestamp_output_text_colour="white"
   timestamp_input_back_colour="black"
   timestamp_notes_back_colour="black"
   timestamp_output_back_colour="black"
   tool_tip_visible_time="5000"
   tool_tip_start_time="400"
   treeview_triggers="y"
   treeview_aliases="y"
   treeview_timers="y"
   underline_hyperlinks="y"
   unpause_on_send="y"
   use_custom_link_colour="y"
   warn_if_scripting_inactive="y"
   wrap_column="120"
   write_world_name_to_log="y"
   > <!-- end of general world attributes -->
  <filter_triggers>mobnames_hero</filter_triggers>
  <log_file_preamble>%c</log_file_preamble>

</world>

<!-- triggers -->

<triggers
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >
  <trigger
   enabled="y"
   expand_variables="y"
   group="runcounter"
   keep_evaluating="y"
   match="You receive * experience points."
   send_to="12"
   sequence="1"
  >
  <send>addExp("%1")</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="Outros"
   ignore_case="y"
   match="You tell @playername *"
   omit_from_log="y"
   omit_from_output="y"
   sequence="1"
  >
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   match="* tell* the group 'sleep'"
   sequence="10"
  >
  <send>ssr
sr</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   match="* tell* the group 'sr'"
   sequence="10"
  >
  <send>ssr</send>
  </trigger>
  <trigger
   group="classpsi"
   match="One of your Exhaust timers has elapsed. (disabling weapon)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classpsi"
   match="One of your Exhaust timers has elapsed. (distracting weapon)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classwzd"
   match="One of your Exhaust timers has elapsed. (ether crash)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classwzd"
   match="One of your Exhaust timers has elapsed. (ether link)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classwzd"
   match="One of your Exhaust timers has elapsed. (ether warp)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classpsi"
   match="One of your Exhaust timers has elapsed. (felling weapon)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   expand_variables="y"
   group="classmnd"
   match="One of your Exhaust timers has elapsed. (psyphon)"
   sequence="10"
  >
  </trigger>
  <trigger
   group="classpsi"
   match="One of your Exhaust timers has elapsed. (restricting weapon)"
   omit_from_output="y"
   sequence="10"
  >
  </trigger>
  <trigger
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="  *!"
   name="multilottoadd"
   send_to="12"
   sequence="100"
  >
  <send>addLotto("%1", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="* belongs to *!"
   sequence="100"
  >
  <send>give 1. %2</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   match="* disarms you and sends your weapon flying!"
   sequence="100"
  >
  <send>
get all
wear all</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   keep_evaluating="y"
   match="* disbands the group."
   send_to="10"
   sequence="100"
  >
  <send>setleader notanker</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="* doesn't NEED rescuing!"
   send_to="12"
   sequence="100"
  >
  <send>setRescue(true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="* doesn't need your help."
   send_to="12"
   sequence="100"
  >
  <send>setRescue(true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="* drops a perfect *."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("perfect", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="psiWeapons"
   keep_evaluating="y"
   match="* flies out of *'s hand to attack *"
   send_to="12"
   sequence="100"
  >
  <send>--Execute("/altsWeapons." .. "%2" .. "={}")
--Note("w1 1: %1 2: %2 3: %3 4: %4")

--addWeaponsAlt("%2","weapon1","%1")

addWeaponsAlt("%2","%1")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classmonshf"
   keep_evaluating="y"
   match="* gasps with horror as you shatter *!"
   sequence="100"
  >
  <send>counter crush stay</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="* gives you several items."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="autobow"
   match="* has fled *!"
   send_to="12"
   sequence="100"
  >
  <send>longShotFleer("%2")</send>
  </trigger>
  <trigger
   group="classviz"
   keep_evaluating="y"
   match="* is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>setVizFinalRiteCasted(false)
</send>
  </trigger>
  <trigger
   group="classmonshf"
   keep_evaluating="y"
   match="* is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>if getTierChar() == "Lord" then
  SendNoEcho("ctr push stay")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   keep_evaluating="y"
   match="* is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>setRescue(true)

if isMday() then
  Execute("onchain") 
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is DEAD*"
   send_to="12"
   sequence="100"
  >
  <send>setKilling("false")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is already in a frenzy."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy %1")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is already in sanctuary."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c sanct %1")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is hurt and suspicious ... you can't sneak up."
   send_to="12"
   sequence="100"
  >
  <send>killCurrentTarget()
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is hurt and suspicious ... you can't sneak up."
   send_to="12"
   sequence="100"
  >
  <send>killCurrentTarget()
Execute("bbb")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   ignore_case="y"
   keep_evaluating="y"
   match="* is killing *."
   send_to="12"
   sequence="100"
  >
  <send>avaliarRescue("%1")</send>
  </trigger>
  <trigger
   custom_colour="4"
   enabled="y"
   expand_variables="y"
   group="iskilling"
   keep_evaluating="y"
   match="* is killing *."
   name="iskilling"
   send_to="12"
   sequence="100"
  >
  <send>killAfterEmote("%1","%2")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is so disgusted with a lavabomb it tries to drop it!"
   sequence="100"
  >
  <send>get lavabomb</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* is surrounded by *'s sanctuary."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c sanct %1")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="* lotto is *"
   send_to="12"
   sequence="100"
  >
  <send>addLotto("%2", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* moves to attack you, but * leaps in the way!"
   sequence="100"
  >
  <send>kiss %2</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* now leads your group."
   send_to="12"
   sequence="100"
  >
  <send>Execute("setleader " .. "%1")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   match="* pales as * sees * death before *."
   sequence="100"
  >
  <send>c clarify %1
c clarify %1</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   match="* pokes you in the ribs."
   name="autorescue"
   sequence="100"
  >
  <send>
rescue %1</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   ignore_case="y"
   keep_evaluating="y"
   match="* removes you from * group."
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>updateGroupLeader("notanker")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="* stops following you."
   send_to="12"
   sequence="100"
  >
  <send>remLotto("%1")
remGroupie("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="* successfully rescues you from *!"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() == false then

  indexToRemove = -1

  if rescuelist == nil then
    rescuelist = {}
  end

  for i = 1, #rescuelist do
    if string.lower(rescuelist[i]) == string.lower("%2") then 
      indexToRemove = i 
    end
  end

  if indexToRemove ~= -1 then
    table.remove(rescuelist, indexToRemove)
    ColourNote("red", "white", "%2" .. " removed from rescue list!")
  end

end</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="classpsi"
   keep_evaluating="y"
   match="* surrounds * with a telekinetic sink."
   send_to="12"
   sequence="100"
  >
  <send>Execute("offcast")
SetVariable("gravitasMob", "%1")
Note("Cast off, gravitas mob: " .. "%1")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autobrand"
   keep_evaluating="y"
   match="* tell* the group 'bp'"
   send_to="12"
   sequence="100"
  >
  <send>
Execute("bp")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'bt+'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("bladetrance deepen")


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'bt-'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("bladetrance lighten")


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autobrand"
   keep_evaluating="y"
   match="* tell* the group 'idtyp'"
   send_to="12"
   sequence="100"
  >
  <send>Execute("idtyp")
</send>
  </trigger>
  <trigger
   group="autobow"
   keep_evaluating="y"
   match="* tell* the group 'ls * *'"
   sequence="100"
  >
  <send>
ls %3 %4</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'off boss'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("bladetrance lighten")
SendNoEcho("bladetrance lighten")


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   match="* tell* the group 'off boss'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("aug off")
EnableTimer("autoheal", false)
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="areacaster"
   keep_evaluating="y"
   match="* tell* the group 'off boss'"
   name="areacaster"
   send_to="12"
   sequence="100"
  >
  <send>
Execute("oncast")
EnableTimer("autocastarea", false)
SendNoEcho("s2")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="singlecaster"
   keep_evaluating="y"
   match="* tell* the group 'off boss'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("s2")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   keep_evaluating="y"
   match="* tell* the group 'off run'"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger("youfollowstm", false)


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autocast"
   keep_evaluating="y"
   match="* tell* the group 'off run'"
   send_to="12"
   sequence="100"
  >
  <send>Execute("offcast")
EnableTimer("autocastarea", false)


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* tell* the group 'off run'"
   send_to="12"
   sequence="100"
  >
  <send>
Execute("cq")


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'off run'"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("bladetrance break")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   match="* tell* the group 'on boss'"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("aug 2")
EnableTimer("autoheal", true)
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'on boss'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("bladetrance deepen")
SendNoEcho("bladetrance deepen")
SendNoEcho("nod")


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="singlecaster"
   keep_evaluating="y"
   match="* tell* the group 'on boss'"
   send_to="12"
   sequence="100"
  >
  <send>
SendNoEcho("s5")

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbzk"
   keep_evaluating="y"
   match="* tell* the group 'on run'"
   send_to="12"
   sequence="100"
  >
  <send>Execute("scar=scar")

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="* tell* the group 'on run'"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("stance veil")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autocast"
   keep_evaluating="y"
   match="* tell* the group 'on run'"
   send_to="12"
   sequence="100"
  >
  <send>Execute("oncast")
EnableTimer("autocastarea", false)
SendNoEcho("s2")
--SendNoEcho("s1")

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   keep_evaluating="y"
   match="* tell* the group 'on run'"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ssr")
EnableTrigger("youfollowstm", true)


</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autosteel"
   keep_evaluating="y"
   match="* tell* the group 'on run'"
   send_to="12"
   sequence="100"
  >
  <send>Send("tell cabeca steel")
Send("tell romulo bark")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autopick"
   match="* tell* the group 'pick *'"
   sequence="100"
  >
  <send>
lp %3
open %3</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autoportal"
   keep_evaluating="y"
   match="* tell* the group 'pp *'"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("pp %3")
</send>
  </trigger>
  <trigger
   group="autorest"
   keep_evaluating="y"
   match="* tell* the group 'rest'"
   sequence="100"
  >
  <send>
rest</send>
  </trigger>
  <trigger
   enabled="y"
   group="addme"
   match="* tell* the group 'setting rescuers'"
   sequence="100"
  >
  <send>
gt add me</send>
  </trigger>
  <trigger
   group="autoskin"
   keep_evaluating="y"
   match="* tell* the group 'skin *'"
   sequence="100"
  >
  <send>
skin %3</send>
  </trigger>
  <trigger
   group="autostartsalv"
   keep_evaluating="y"
   match="* tell* the group 'start salv *'"
   send_to="10"
   sequence="100"
  >
  <send>
c salvation %3</send>
  </trigger>
  <trigger
   group="autotrack"
   match="* tell* the group 'track *'"
   sequence="100"
  >
  <send>track %3</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autobrand"
   keep_evaluating="y"
   match="* tell* the group 'ty'"
   send_to="12"
   sequence="100"
  >
  <send>
Execute("btyp")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* tell* the group 'wake'"
   sequence="100"
  >
  <send>
stand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="* tells the group 'plane *'"
   sequence="100"
  >
  <send>c plane %2</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   keep_evaluating="y"
   match="* tells the group 'recall'"
   sequence="100"
  >
  <send>stand
recall</send>
  </trigger>
  <trigger
   group="autosalv"
   keep_evaluating="y"
   match="* tells the group 'salv *'"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Send("cast salvation %2")
end</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autosend"
   keep_evaluating="y"
   match="* tells the group 'send * *'"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Send("cast send %2 %3")
end



</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells the group 'sleep'"
   sequence="100"
  >
  <send>
sleep</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   expand_variables="y"
   group="mday"
   ignore_case="y"
   keep_evaluating="y"
   match="* tells you '@strOrder *'"
   name="mdayorder"
   send_to="10"
   sequence="100"
  >
  <send>%2</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   keep_evaluating="y"
   match="* tells you 'area *'"
   send_to="10"
   sequence="100"
  >
  <send>
%2
aa</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="* tells you 'bark'"
   sequence="100"
  >
  <send>
c bark %1</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells you 'cb'"
   sequence="100"
  >
  <send>
c 'cure blind' %1</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells you 'cd'"
   send_to="10"
   sequence="100"
  >
  <send>
cd %1</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells you 'cp'"
   send_to="10"
   sequence="100"
  >
  <send>
cp %1</send>
  </trigger>
  <trigger
   group="autostartsalv"
   keep_evaluating="y"
   match="* tells you 'div *'"
   send_to="10"
   sequence="100"
  >
  <send>
c div %2</send>
  </trigger>
  <trigger
   group="autostartsalv"
   keep_evaluating="y"
   match="* tells you 'div'"
   send_to="10"
   sequence="100"
  >
  <send>
c div %1</send>
  </trigger>
  <trigger
   group="classprs"
   keep_evaluating="y"
   match="* tells you 'div'"
   send_to="10"
   sequence="100"
  >
  <send>
c div %1</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells you 'frenzy'"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c frenzy %1")
--Execute("c frenzy %1")</send>
  </trigger>
  <trigger
   group="autorc"
   keep_evaluating="y"
   match="* tells you 'rc'"
   name="autorctrigger"
   send_to="10"
   sequence="100"
  >
  <send>
c 'remove curse' %1</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="* tells you 'sanc'"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c sanct %1")
--Execute("c sanct %1")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="* tells you 'steel'"
   sequence="100"
  >
  <send>
c steel %1</send>
  </trigger>
  <trigger
   group="autowall"
   keep_evaluating="y"
   match="* tells you 'wall *'"
   send_to="10"
   sequence="100"
  >
  <send>
c 'wall of thorns' %2</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="* the group 'en po'"
   sequence="100"
  >
  <send>
enter portal</send>
  </trigger>
  <trigger
   enabled="y"
   group="queue"
   keep_evaluating="y"
   match="* xp."
   send_to="12"
   sequence="100"
  >
  <send>execActionQueue()</send>
  </trigger>
  <trigger
   group="classshf"
   match="*'s * chakra pulses with *"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("qi drain %2")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   ignore_case="y"
   keep_evaluating="y"
   match="*'s attack* haven't hurt *!"
   send_to="12"
   sequence="100"
  >
  <send>avaliarRescue("%3")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   ignore_case="y"
   keep_evaluating="y"
   match="*'s attack* strike* * *, with *"
   send_to="12"
   sequence="100"
  >
  <send>avaliarRescue("%4")</send>
  </trigger>
  <trigger
   custom_colour="6"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   ignore_case="y"
   keep_evaluating="y"
   match="*'s backstab strike* with *"
   send_to="12"
   sequence="100"
  >
  <send>avaliarRescue("%1")</send>
  </trigger>
  <trigger
   group="rescuepusher"
   match="*'s counterattack knocks * down!"
   sequence="100"
  >
  <send>rescue %1</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   match="*'s features fill with rage!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy %1")</send>
  </trigger>
  <trigger
   custom_colour="6"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   ignore_case="y"
   keep_evaluating="y"
   match="*'s pierce strike* with *"
   send_to="12"
   sequence="100"
  >
  <send>avaliarRescue("%1")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classran"
   keep_evaluating="y"
   match="*( Lloydable )*"
   sequence="100"
  >
  <send>emo detected a Lloydable room</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   keep_evaluating="y"
   match="*/*Hp */*Ma *Mv *Xp La*"
   name="stabNameControl"
   send_to="12"
   sequence="100"
  >
  <send>setDisabledStabName(false)
EnableTrigger("stabNameControl",false)</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="detectClass"
   keep_evaluating="y"
   match="*/*Hp */*Ma *Mv *Xp La*"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("detectClass", false)</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="RoomCheck"
   keep_evaluating="y"
   match="*/*Hp */*Ma *Mv *Xp La*"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("RoomCheck", false)
checkRoom()

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="InvList"
   keep_evaluating="y"
   match="*/*Hp */*Ma *Mv *Xp La*"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("InvList", false)
Note("InventoryList set")
SendNoEcho("config +condition")
SendNoEcho("config +label")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="*/*Hp */*Ma *Mv *Xp La*"
   name="multilottostop"
   send_to="12"
   sequence="100"
  >
  <send>showLotto()
EnableTrigger ("multilottoadd", false)
EnableTrigger ("multilottostop", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="*: you can't carry that * *."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("emo |br| couldn't loot corpse!!!")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="*@groupleader* tell* the group 'en po'"
   sequence="100"
  >
  <send>
enter portal</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="*@groupleader* tell* the group 'ent po'"
   sequence="100"
  >
  <send>
enter portal</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="*@groupleader* tell* the group 'enter port'"
   sequence="100"
  >
  <send>
enter portal</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="*@groupleader* tell* the group 'home'"
   send_to="10"
   sequence="100"
  >
  <send>
c home</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="*@groupleader* tell* the group 'plane thorn'"
   send_to="10"
   sequence="100"
  >
  <send>
c plane thorn</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*A burly Earth Elemental scours the plane for impurities."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept elemental
quicken off
c decept elemental
</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*A burst of fire whirls around on burning wings."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept mephit
quicken off
c decept mephit

</send>
  </trigger>
  <trigger
   custom_colour="12"
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="*A heap of gems shifts under its own weight."
   sequence="100"
  >
  <send>get all pile</send>
  </trigger>
  <trigger
   custom_colour="12"
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="*A jumbled pile of assorted jewels is ripe for the picking."
   sequence="100"
  >
  <send>get all pile</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*A large magma mephit flirts dangerously close to the lava."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept mephit
quicken off
c decept mephit
</send>
  </trigger>
  <trigger
   custom_colour="12"
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="*A mix of various jewels and gems are jumbled into one big pile."
   sequence="100"
  >
  <send>get all pile</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autogold"
   keep_evaluating="y"
   match="*A pile of gold coins."
   sequence="100"
  >
  <send>get coins</send>
  </trigger>
  <trigger
   custom_colour="12"
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="*A pile of jewels has been scattered haphazardly."
   sequence="100"
  >
  <send>get all pile</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="*A small fire burns with particularly pungent smoke."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Turn Off Brief)")

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classviz"
   keep_evaluating="y"
   match="*An eerie pool of blood has formed here!"
   name="vizpool"
   send_to="12"
   sequence="100"
  >
  <send>castSanguenPax()</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*An elemental soldier saunters about, looking for trouble."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept soldier
quicken off
c decept soldier

</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*Burning violently a being of elemental fury moves towards you."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept elemental
quicken off
c decept elemental
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autoLogin"
   keep_evaluating="y"
   match="*Existing Character."
   send_to="12"
   sequence="100"
  >
  <send>resetLoggedChar()
Send("Amarelo77")
Send("i")
--Send("i")</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*Flames flow violently in an attempt to consume you."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept elemental
quicken off
c decept elemental
</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*Impossibly large flames burn with a deadly rage."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept elemental
quicken off
c decept elemental
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autogold"
   keep_evaluating="y"
   match="*One miserable gold coin."
   sequence="100"
  >
  <send>get coin</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*Rare minerals have given this elemental the gift of telepathy."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept telepath
quicken off
c decept telepath

</send>
  </trigger>
  <trigger
   custom_colour="5"
   expand_variables="y"
   keep_evaluating="y"
   match="*Telnet: avatar.outland.org 3000*"
   sequence="100"
  >
  <send>Fido</send>
  </trigger>
  <trigger
   custom_colour="5"
   expand_variables="y"
   group="autonextlogin"
   keep_evaluating="y"
   match="*Telnet: avatar.outland.org 3000*"
   send_to="12"
   sequence="100"
  >
  <send>logNextChar()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="*The corpse of @playername is lying here."
   sequence="100"
  >
  <send>get all @playername
wear all</send>
  </trigger>
  <trigger
   group="autodecept"
   keep_evaluating="y"
   match="*This large Earth Elemental looks enraged."
   omit_from_output="y"
   sequence="100"
  >
  <send>quicken 9
c decept elemental
quicken off
c decept elemental
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="runcounter"
   keep_evaluating="y"
   match="*Your gain is: */* hp, */* m, */* mv */* prac."
   send_to="12"
   sequence="100"
  >
  <send>afterLevel("%2","%4","%8")</send>
  </trigger>
  <trigger
   group="autoLogin"
   match="*ress &lt;enter&gt; to continue*"
   send_to="12"
   sequence="100"
  >
  <send>Send("")</send>
  </trigger>
  <trigger
   group="autoLogin"
   ignore_case="y"
   keep_evaluating="y"
   match="*ress enter to continue*"
   send_to="12"
   sequence="100"
  >
  <send>Send("")</send>
  </trigger>
  <trigger
   group="Counters"
   match="*|*"
   name="GroupGrabDmg"
   send_to="12"
   sequence="100"
  >
  <send>local nCheck = tonumber("%1")
local p = ""
local s = " " .. "%2"

if nCheck == nil then return end
p = string.sub(s, string.find(s, " ") + 1)
p = string.sub(p, string.find(p, " ") + 1)
p = string.sub(p, string.find(p, " ") + 1)
if string.sub(p, 0, string.find(p, " ") - 1) == "Hero" or string.sub(p, 0, string.find(p, " ") - 1) == "Lord" then
 p = string.sub(p, string.find(p, " ") + 1)
end
if tonumber(string.sub(p, 0, string.find(p, " ") - 1)) ~= nil then
p = string.sub(p, string.find(p, " ") + 1)
p = string.sub(p, string.find(p, " ") + 1)
end
p = string.sub(p, 0, string.find(p, " ") - 1)
counterCommand("add " .. p)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="1. History of this place..."
   sequence="100"
  >
  <send>say history</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="1. Light? Very well."
   sequence="100"
  >
  <send>say light</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="1. One steak coming up."
   sequence="100"
  >
  <send>say steak</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="1. Uh-huh."
   sequence="100"
  >
  <send>say uh-huh</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="10. Actually, it is me who is convinced. The half-orcs deserve death at the hands of the undead horde..."
   sequence="100"
  >
  <send>say mercenaries</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="10. The root of your problems lies with ulexite. You're using it to raise the dead and by extension all of you are doomed..."
   sequence="100"
  >
  <send>say root</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="2. Anything for you, buddy."
   sequence="100"
  >
  <send>say anything</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="4. Any quests?"
   sequence="100"
  >
  <send>say quests</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="5. Insane!"
   sequence="100"
  >
  <send>say insane</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="classpsi"
   ignore_case="y"
   keep_evaluating="y"
   match="@gravitasMob is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>Execute("oncast")
SetVariable("gravitasMob", "")
Note("Cast back on")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   match="@groupleader drinks *"
   sequence="100"
  >
  <send>
drink</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   match="@groupleader enters a dark patch."
   sequence="100"
  >
  <send>
enter patch</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   match="@groupleader enters a dimly lit tunnel."
   sequence="100"
  >
  <send>
enter tunnel</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   ignore_case="y"
   keep_evaluating="y"
   match="@groupleader enters a long, * strand."
   sequence="100"
  >
  <send>enter strand</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="@groupleader enters a portal."
   sequence="100"
  >
  <send>enter portal</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   match="@groupleader enters a screaming vortex."
   sequence="100"
  >
  <send>
enter vortex</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="@groupleader enters a silver pentagram."
   sequence="100"
  >
  <send>
enter penta</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   ignore_case="y"
   keep_evaluating="y"
   match="@groupleader enters swirl of chaotic energies."
   sequence="100"
  >
  <send>enter swirl</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   ignore_case="y"
   keep_evaluating="y"
   match="@groupleader recalls!"
   send_to="12"
   sequence="100"
  >
  <send>if getTierChar() == "Lord" then
  Send("recall")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="A Chimerical griffon is DEAD!!"
   sequence="100"
  >
  <send>get corpse
put corpse xmain</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A Dried-Up Ditch"
   send_to="12"
   sequence="100"
  >
  <send>Note("(No Exit South)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A Glacial Guardian is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("milk", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   keep_evaluating="y"
   match="A HOGathon has just BEGUN!!!"
   sequence="100"
  >
  <send>beep self
beep self
beep self
beep self
beep self
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A Narrow Hallway"
   send_to="12"
   sequence="100"
  >
  <send>Note("Maze n s 2e d u. To Fluent")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A brugmansia has toppled here, its flowers freshly wilting."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Give Letter Ent Bank, Then Visit Edmuntrillion. Bring Back Coin)")</send>
  </trigger>
  <trigger
   expand_variables="y"
   keep_evaluating="y"
   match="A chandler gives you a pair of wind-ravaged boots."
   sequence="100"
  >
  <send>give cloak chand=buy cloak=i</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A crown falls to the ground as the Patriarch is vanquished."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("crown", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A deep gnome recovery team is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("gem", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A disorderly office"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Window)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A dry riverbed provides a climbable route up the east slope."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Riverbed)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A faint break in the woods indicates the hint of a path leading south."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Kill 3 Trog Hunters In DarkWood,Then Return)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A family of goblins is DEAD!!"
   sequence="100"
  >
  <send>get all.gem corp</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A giant creature of Ice is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("clump", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A giant-shaped swirl of leaves is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("clump", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A githyanki lookout is DEAD!!"
   sequence="100"
  >
  <send>get corpse
put corpse xmain</send>
  </trigger>
  <trigger
   expand_variables="y"
   keep_evaluating="y"
   match="A haggler gives you panthrodrine-skin leggings."
   sequence="100"
  >
  <send>give disco hagg=buy disco=i</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A lone weirwood weeps blood-red tears."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Meditate,Yes,No,Both,Neither)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A model of Thorngate"
   send_to="12"
   sequence="100"
  >
  <send>Note("3e room")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="A murky merman is DEAD!!"
   sequence="100"
  >
  <send>TELL SELF Forage Site - EAST,SOUTH,SOUTH,SOUTH</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classcle"
   keep_evaluating="y"
   match="A protective aura surrounds yourself and your allies!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'protective vigil'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A single white feather lies amongst the forest leaves."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Get Feather)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A single white feather lies amongst the forest leaves."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("feather", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A stillness settles upon you like the weight of a million feathers."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Follow Until Speaks,Say Both,Neither,Go South Type Die)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="A tight cleft in the cliff wall leads steeply to the north."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Cleft)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="A trunk of stone is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("clump", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="GAG"
   match="A voice whispers '* is in perfect health.'"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="GAG"
   match="A voice whispers '* is perfectly healthy.'"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Alder, hickory, chestnut, cherry; so many trees are represented."
   send_to="12"
   sequence="100"
  >
  <send>Note("(PP Kirkan, Get All Cavity,Item To Fungle Forest)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="All hail the new kzinti arena champion!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("insignia", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="Allegaagse says 'Here is something for your trouble*"
   sequence="100"
  >
  <send>insignia</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="Allegaagse says 'You have done such a good job that I have raised my estimation of your worth as a searcher*"
   sequence="100"
  >
  <send>insignia</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="An artificer blessing surrounds yourself and your allies!"
   name="classcle"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'artificer blessing'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="An elder mimic is DEAD!!"
   sequence="100"
  >
  <send>get all.cash</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="An emptiness replaces your feeling of glory."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'glorious conquest'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="An extremely well guarded merchant caravan is DEAD!!"
   sequence="100"
  >
  <send>get all coin</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="An old fire pit is filled with partially charred wood and ash."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("bracer", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="As the last enemy falls, tiny shadows gather from each corpse."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("shadow", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="As the last guardian hits the floor, dead, you hear a CLANG,"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("ann", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="As your eyes adjust to the darkness, you are drawn to a single"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("shard", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="At the cusp of the Necropolis"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Linkrefresh)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="At the end of a leaning trunk"
   send_to="12"
   sequence="100"
  >
  <send>Note("(South One Way)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Atop a Dragon's skull"
   send_to="12"
   sequence="100"
  >
  <send>Note("All S room")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Before a living barrier"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Pull Bloom)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Before the Ultimate Nightmare"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Down No Exit)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Better find four light sources then."
   sequence="100"
  >
  <send>give lumin grogbert</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="Bladetrance depth: *"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho ("emo |bc| BT Level: |bw|" .. %1)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Buried between the stones"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Up One Way)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Captain Dieme is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("letter", true)</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autocast"
   keep_evaluating="y"
   match="Cast the spell on whom/?"
   name="autocast"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Congealed pain essence leaks from the dying leech."
   send_to="12"
   sequence="100"
  >
  <send>
getpassleader("essence", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Cyskadella is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("all.grub", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Deep between the roots"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Open Tangle)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Deepening shadows among the boulders"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Hole)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Demon Lord Typhus is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("staff", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Entrance to the caves"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Linkrefresh)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Fallen leaves play upon the short grass forming patterns."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Say-Spruce Tree)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Foraging drops a cache of dead grubs."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("grub", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Foraging drops a couple of snail pieces."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("snail", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Foraging drops a dry dirt fruit."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("fruit", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Foraging drops honey-like goo."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("honey", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Grogbert Thunderbeard asks 'Thank yee fer tha key, bu', where's tha box?'"
   sequence="100"
  >
  <send>give ornate grogbert</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Grogbert Thunderbeard says 'Moore lights, p'eease.'"
   omit_from_output="y"
   sequence="100"
  >
  <send>give limp grogbert
give baby grogbert
give torch grogbert</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Grogbert Thunderbeard smiles at you warmly."
   sequence="100"
  >
  <send>give silver grogbert</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Grogbert Thunderbeard thanks you heartily."
   sequence="100"
  >
  <send>give steak grogbert</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autobrand"
   keep_evaluating="y"
   match="Has *(*) charges at level * 'heal'."
   send_to="12"
   sequence="100"
  >
  <send>updateBrandStatus("%1", "%2")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   keep_evaluating="y"
   match="How do you mean to sneak anywhere without sneaking?"
   sequence="100"
  >
  <send>sneak=sneak</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   keep_evaluating="y"
   match="Ica emits a flash of unholy light*"
   send_to="12"
   sequence="100"
  >
  <send>Send("rescue Ica")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Immersed in Nightmares"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Main Road N-S)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Inside the Llonghouse"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Angh/Quest,s)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Inside the gates of Caerllong"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Pull Chain)")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="It is * o'clock*"
   sequence="100"
  >
  <send>t self its %1 o'clock.</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="Ketos is DEAD!!"
   sequence="100"
  >
  <send>TELL SELF Forage Site - UP, UP, SOUTH</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Kra tells you 'Your devotion to prayers is commendable, but I am not yet ready to aid you further.'"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c prayer Stupefy")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Kra's presence disappears."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c prayer Stupefy")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="Mayflower, Explorer and Trailblazer exclaims 'Follow me for Ocean Transport!'"
   name="folmay"
   sequence="100"
  >
  <send>fol mayf</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   match="Northwestern Shoreline (Water)"
   sequence="100"
  >
  <send>config +brief</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="GAG"
   keep_evaluating="y"
   match="Ok, your condition is now set to *"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   expand_variables="y"
   group="GAG"
   match="Ok, your label is now set to *"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="On crumbling stone"
   send_to="12"
   sequence="100"
  >
  <send>Note("(DONT GO DOWN)")</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="One of your Exhaust timers has elapsed. (*)"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("t self |br| Fatigue gone: %1")
SendNoEcho("emo |bw| Fatigue gone: %1")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="One of your Exhaust timers has elapsed. (kinetic chain)"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'kinetic chain'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classsor"
   keep_evaluating="y"
   match="One of your Exhaust timers has elapsed. (tainted genius)"
   sequence="100"
  >
  <send>t self |BW| tainted genius avaiable</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="One of your Exhaust timers has elapsed. (veil of blades)"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("stance veil")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Outside Caerllong"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Push Rock)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Outside the Llonghouse"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Structure)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Overlooking Patriarchs' gulch"
   send_to="12"
   sequence="100"
  >
  <send>Note("Lloydable room")
 </send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Padmasa's ruin"
   send_to="12"
   sequence="100"
  >
  <send>Note("3e All s room")</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   match="Panic stricken, you flee wildly, but trip and go down hard!"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="Screaming with rage, the fires wither and die. From within them"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("amulet", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="Seneca Rotberry says 'Bring me his dagger.'"
   sequence="100"
  >
  <send>say done</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="Seneca Rotberry says 'Go ahead, you have my full attention.'"
   sequence="100"
  >
  <send>give cowl seneca</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="Seneca Rotberry says 'It is done, then. Show me.'"
   sequence="100"
  >
  <send>give dagger seneca</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   match="Seneca Rotberry says 'There is your assassination. Don't forget to bring me proof.'"
   sequence="100"
  >
  <send>say returned</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Shrine of Acilese"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Linkrefresh)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Someone has made some effort to conceal this passage to the west."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Passage)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="Somewhere on a rather familiar plane, a door slams shut and locks."
   sequence="100"
  >
  <send>beep self
beep self
beep self</send>
  </trigger>
  <trigger
   custom_colour="4"
   expand_variables="y"
   group="classpsi"
   keep_evaluating="y"
   match="Sparks fly as * force field absorbs the attack!"
   name="shattertrigger"
   send_to="12"
   sequence="100"
  >
  <send>Send("c shatterspell")
EnableTrigger("shattertrigger", false)
runAfter(10, 'EnableTrigger("shattertrigger", true)')</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Squirrels scamper through the edging trees, staying in the branches."
   send_to="12"
   sequence="100"
  >
  <send>Note("(torm Brew-Grandmother Ent,Abbaye Du Livre-Ent Book,Say-the young,heartache,spirit of the goddess)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="GAG"
   keep_evaluating="y"
   match="Tell whom what?"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="The Altar of Kra"
   send_to="12"
   sequence="100"
  >
  <send>Note("(Linkrefresh)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex asks 'How many pillars does the room have?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say 6")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex asks 'To which season does the minor sign of the amphora belong?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say spring")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex asks 'To which season does the minor sign of the tower belong?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say summer")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex asks 'Which of the four seasonal houses has a strong connection with wisdom?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say winter")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'How many of those stars are red?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say two")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   lines_to_match="2"
   keep_evaluating="y"
   match="The Haruspex says 'Of autumn's major signs, the harvest and the fallen angel are two.'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say hand")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'Of spring's major signs, the immortal bird and the gladius are two.'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say ship")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'Of summer's major signs, the priest and the lovers are two.'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say unicorn")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'Of winters's major signs, the magister and the burning man are two.'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say warhammer")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'The pillars represent the wanderers, one of whom is Pandra of the Moon.'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say sandstone")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'To which season does the minor sign of the snake belong?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say autumn")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The Haruspex says 'Which sign is a bad omen for sailors?'"
   send_to="12"
   sequence="100"
  >
  <send>doAfter (1, "say gaping maw")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   match="The Lord Typhus' shadow is DEAD!!"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("staff", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The Patriarch leaves behind a token of gratitude as he journeys to the afterlife."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("scale", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The Rock Wyrm mother is DEAD!!"
   sequence="100"
  >
  <send>get corpse
put corpse xmain</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="The artificer blessing flickers and fades away."
   send_to="12"
   sequence="100"
  >
  <send>if GetVariable("playername") == "Capelao" then
     addActionQueue("c 'artificer blessing'")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="The ash and oak, and birch and yew are dressed in ribbons fair."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Get goose feather,vallenwood bark,handful of berries-DeepWoods)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The automaton falls to pieces"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("bit", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The flames subside, leaving a crystalline wand in their wake."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("wand", false)</send>
  </trigger>
  <trigger
   group="classsor"
   keep_evaluating="y"
   match="The grey shroud of death fades."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'death shroud'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The light catches on a silvery speck."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("key", false)</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="The presence of Kra fills you, and you feel more astute with stunning blows."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c prayer Stupefy")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The preta is DEAD!!"
   sequence="100"
  >
  <send>TELL SELF Forage Site - WEST, WEST</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classcle"
   keep_evaluating="y"
   match="The protective aura disappears."
   send_to="12"
   sequence="100"
  >
  <send>if GetVariable("playername") == "Papapop" then
    addActionQueue("c 'protective vigil'")
end


</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="The protective aura fades from around your body."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("sanc")
--addActionQueue("t lynn sanc")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   match="The protective aura fades from around your body."
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Execute("quicken 9")
  Execute("cast inno")
  Execute("quicken off")
  Execute("preach sanc")
end

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   keep_evaluating="y"
   match="The rain dies down."
   sequence="100"
  >
  <send>ssr</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The shade of an ent is DEAD!!"
   sequence="100"
  >
  <send>TELL SELF Forage Site - SOUTH, SOUTH, SOUTH</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="hero_quest"
   keep_evaluating="y"
   match="The shade of an executioner is DEAD!!"
   sequence="100"
  >
  <send>TELL SELF Forage Site - WEST, WEST, NORTH</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="The shadow falls to pieces."
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("shadow", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   match="The unlucky adventurer whispers the word &quot;*&quot;"
   send_to="12"
   sequence="100"
  >
  <send>Note("%1")
Note("%1")
Note("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="The water evaporates into a golden light as it reaches the tattoo on your arms."
   sequence="100"
  >
  <send>rem tattoo
put tattoo xmain
wear all
south
south</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="The winner of the Lotto is:  *!"
   send_to="12"
   sequence="100"
  >
  <send>addLotto("%1", true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="The winners of the Lotto are:"
   send_to="12"
   sequence="100"
  >
  <send>clearLottoNames()
ColourNote("red", "white", "Lotto list cleared")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="The winners of the Lotto are:"
   send_to="12"
   sequence="100"
  >
  <send>EnableTrigger ("multilottoadd", true)
EnableTrigger ("multilottostop", true)

</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="This ground is cursed, you cannot recall!"
   sequence="100"
  >
  <send>gt This ground is cursed, I cannot recall!</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="Tor surrounds you with a malevolent blessing.*"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   custom_colour="4"
   expand_variables="y"
   group="autobrand"
   keep_evaluating="y"
   match="Weight *, value *, level *."
   send_to="12"
   sequence="100"
  >
  <send>updateBrandLevel("%3")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   keep_evaluating="y"
   match="Welcome back to the AVATAR System *, *"
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>charLogin("%1")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   keep_evaluating="y"
   match="Welcome back to the AVATAR System, * *."
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>charLogin("%2")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   keep_evaluating="y"
   match="Welcome to the AVATAR System, * *."
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>charLogin("%2")
</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Werredan clears your thoughts, allowing you to focus on critical hits."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c prayer precision")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Werredan surrounds you with blinding light in response to your prayer."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c prayer 'Malice aura'")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Werredan tells you 'Your devotion to prayers is commendable, but I am not yet ready to aid you further.'"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c prayer precision")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="Werredan's presence disappears."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c prayer 'Malice aura'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   keep_evaluating="y"
   match="What with, your bare hands?"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Execute("gt no bow")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   keep_evaluating="y"
   match="With despair, you realize your hands are mortal again."
   send_to="12"
   sequence="100"
  >
  <send>doAfter(3, "hog")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="Within the centre of the raging vortex"
   send_to="12"
   sequence="100"
  >
  <send>Note("(North-Angelic Casters,South-Angelic Brutes,East-Demonic Brutes,West-Demonic Caster/ No Regain)")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   match="XXXXX \d+\|\s*\d+ (Hero|Lord) @playername\s*(Sleep|Stand|Fight|Rest|Busy|STUN!)\s*\d+/\d+\s*\d+/\d+\s*\d+/\d+\s*\d+\s*(\d+)(.*)"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>autoPrsAbsolve("%3")
</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You adopt veil of blades."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("stance veil")
addActionQueue("bladetrance enter")
</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="autocast"
   keep_evaluating="y"
   match="You already have a mystical barrier."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'mystical barrier'")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You already move while hidden."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("m=m")
</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="You are already Glowing!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sanc")</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="You are already bathed in glory."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'glorious conquest'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You are already driven by an unholy rampage!*"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You are already in a bladetrance."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("bladetrance enter")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="You are already in a frenzy."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="q_frenzy_quicken"
   keep_evaluating="y"
   match="You are already in a frenzy."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("quicken 9=c frenzy=quicken off")</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_frenzy"
   keep_evaluating="y"
   match="You are already in a frenzy."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy")</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="You are already in sanctuary."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sanc")</send>
  </trigger>
  <trigger
   group="classsor"
   keep_evaluating="y"
   match="You are already shrouded."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'death shroud'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You are already standing.*"
   sequence="100"
  >
  <send>cast 'unholy rampage'</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You are already using veil of blades."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("stance veil")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="You are already zealous."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'holy zeal'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   match="You are blind!!!"
   sequence="100"
  >
  <send>preach clarify</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="InvList"
   match="You are carrying:"
   name="youCarrying"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("InvList", true)</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="You are consumed by holy zeal."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'holy zeal'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="You are cursed and unable to recall!"
   sequence="100"
  >
  <send>gt I'm cursed and unable to recall!</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="You are filled with rage."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar")</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_frenzy"
   keep_evaluating="y"
   match="You are filled with rage."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="q_frenzy_quicken"
   keep_evaluating="y"
   match="You are filled with rage."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("quicken 9=c frenzy=quicken off")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   keep_evaluating="y"
   match="You are not alert enough to slip into a combat in a controlled manner."
   send_to="12"
   sequence="100"
  >
  <send>Execute("alert")
Execute("alert")

if isMday() then
  Execute("gt slip failed")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="You are now AFK."
   sequence="100"
  >
  <send>time</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You are now leading *'s group."
   send_to="10"
   sequence="100"
  >
  <send>setleader notanker</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="You are surrounded by a * aura."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sanc")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="autocast"
   keep_evaluating="y"
   match="You are surrounded by a mystical barrier."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'mystical barrier'")</send>
  </trigger>
  <trigger
   group="classstm"
   keep_evaluating="y"
   match="You are surrounded by a warm spring rain stratum."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("ssr")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You attempt to move in the shadows."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("shadow=shadow")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You attempt to move silently."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sneak=sneak")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You attempt to move while hidden."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("m=m")
</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="You blaze with an aura of glory."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'glorious conquest'")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classmonshf"
   keep_evaluating="y"
   match="You can only harness your Qi while unarmed."
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Send("emote monk using weapons alert!")
else
  Send("t self monk using weapons alert!")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You can't get any sneakier!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sneak=sneak")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   match="You can't see anything!"
   sequence="100"
  >
  <send>gt I'm blind!</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autotrack"
   keep_evaluating="y"
   match="You can't sense a trail to * from here."
   sequence="100"
  >
  <send>emo cant sense trail to %1 from here</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You can't shadowform any more than you already are!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("shadow=shadow")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="RaceMiraar"
   keep_evaluating="y"
   match="You can't shift your shape into nothing."
   send_to="12"
   sequence="100"
  >
  <send>clearActionQueue()
shapeNext()</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classmonshf"
   keep_evaluating="y"
   match="You cannot perform this technique because your hands are already augmented."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'stone fist'")</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="You concentrate on the Iron Monk style."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sanc")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You create * wall of thorns."
   sequence="100"
  >
  <send>emo created |bc|%1 |N|wall.</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You develop a strong kinetic link with your weapons."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'kinetic chain'")</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   match="You disappear into the void."
   sequence="100"
  >
  <send>time</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You do not have enough mana to cast unholy rampage.*"
   sequence="100"
  >
  <send>sleep

</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="psiWeapons"
   keep_evaluating="y"
   match="You do not have that item."
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You do the best you can!"
   send_to="12"
   sequence="100"
  >
  <send>setKilling(true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   ignore_case="y"
   keep_evaluating="y"
   match="You dream of * telling you '@strOrder *'"
   send_to="10"
   sequence="100"
  >
  <send>
%2</send>
  </trigger>
  <trigger
   group="autorc"
   keep_evaluating="y"
   match="You dream of * telling you 'rc'"
   send_to="10"
   sequence="100"
  >
  <send>
stand
c 'remove curse' %1
sleep
</send>
  </trigger>
  <trigger
   group="autowall"
   keep_evaluating="y"
   match="You dream of * telling you 'wall *'"
   send_to="10"
   sequence="100"
  >
  <send>
stand
c 'wall of thorns' %2
sleep</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   ignore_case="y"
   keep_evaluating="y"
   match="You drop @playername xMainBag."
   sequence="100"
  >
  <send>get xmain</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You emerge from your bladetrance into a vacant reality."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("bladetrance enter")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You fail to heighten your senses."
   sequence="100"
  >
  <send>heig</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="You fail to rescue *"
   send_to="12"
   sequence="100"
  >
  <send>setRescue(true)</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="You failed your * due to lack of concentration!"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("emo failed casting |br|%1")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your ablution due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast ablut</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your artificer blessing due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'artificer blessing'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your concentrate due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast concen</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your conscious weapon due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'conscious weapon'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your consummation due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast consummation</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your dark embrace due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'dark embrace'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your death shroud due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'death shroud'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your defiled flesh due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast defiled</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your ether link due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'ether link'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your eulogy due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast eulogy</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your felling weapon due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'felling weapon'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your frenzy due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast frenzy</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your holy zeal due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'holy zeal'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your homeshift due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>c home</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your intelligent weapon due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'intelligent weapon'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your kinetic chain due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'kinetic chain'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your mystical barrier due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>c 'mystical barrier'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your planeshift due to lack of concentration!"
   send_to="12"
   sequence="100"
  >
  <send>local plane = GetVariable("currentPlane")

if plane ~= nil and string.len(plane) &gt; 0 then
  Execute("cast plane " .. plane)
end
 
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your prayer due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast prayer 'malice aura'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your protective vigil due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'protective vigil'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your saving grace due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'saving grace'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your savvy due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast savvy</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your stone fist due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast 'stone fist'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   keep_evaluating="y"
   match="You failed your unholy rampage due to lack of concentration!"
   sequence="100"
  >
  <send>cast 'unholy rampage'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="repeat"
   match="You failed your water breathing due to lack of concentration!"
   send_to="10"
   sequence="100"
  >
  <send>cast water</send>
  </trigger>
  <trigger
   enabled="y"
   group="mday"
   keep_evaluating="y"
   match="You feel less fatigued. (*)"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("t self |br| Fatigue gone: %1")</send>
  </trigger>
  <trigger
   group="autoalert"
   keep_evaluating="y"
   match="You feel less perceptive."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("alert=alert")
Execute("alert")
Execute("alert")</send>
  </trigger>
  <trigger
   group="classpal"
   keep_evaluating="y"
   match="You feel less zealous."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'holy zeal'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You feel more confidence in your ability with *."
   sequence="100"
  >
  <send>emo tingled |BC|%1!</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You feel more confidence in your ability with unholy rampage.*"
   sequence="100"
  >
  <send>slearn unholy rampage
stand</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classmonshf"
   keep_evaluating="y"
   match="You focus on the Dagger Hand technique."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'dagger hand'")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classmonshf"
   keep_evaluating="y"
   match="You focus on the Stone Fist technique."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'stone fist'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classstm"
   keep_evaluating="y"
   match="You follow *"
   name="youfollowstm"
   sequence="100"
  >
  <send>sr</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   ignore_case="y"
   keep_evaluating="y"
   match="You follow @groupleader *."
   send_to="9"
   sequence="100"
   variable="lastdirmoved"
  >
  <send>%1</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autogold"
   keep_evaluating="y"
   match="You get * gold coins."
   sequence="100"
  >
  <send>drop %1 coins</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get *key* from corpse of *"
   send_to="12"
   sequence="100"
  >
  <send>passleader("key")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Diamante's Pointy Stick from corpse of *"
   sequence="100"
  >
  <send>give xcrom2 cagao</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Garra Stick from corpse of *"
   sequence="100"
  >
  <send>give xcrom4 bom</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Graveto from corpse of *"
   sequence="100"
  >
  <send>give xcrom6 medo</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Orion's Pointy Stick from corpse of *"
   sequence="100"
  >
  <send>give xcrom1 cagao</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Selfie Stick from corpse of *"
   sequence="100"
  >
  <send>give xcrom5 medo</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get Unha Stick from corpse of *"
   sequence="100"
  >
  <send>give xcrom3 bom</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a big ant chakram from corpse of *"
   sequence="100"
  >
  <send>give psiwield2 opa</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a carved and polished diamond from corpse of Sellah the survivor."
   send_to="12"
   sequence="100"
  >
  <send>passleader("diamond")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autogold"
   keep_evaluating="y"
   match="You get a gold coin."
   sequence="100"
  >
  <send>drop 1 coin</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a halfling thief's decomposing arm from corpse of Hrjaa."
   send_to="12"
   sequence="100"
  >
  <send>passleader("arm")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a small wooden lockbox from corpse of *"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("drop lockbox")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a summons from Alastar from corpse of *"
   send_to="12"
   sequence="100"
  >
  <send>passleader("summon")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get a tooled bone from corpse of Rastar the Injestor."
   send_to="12"
   sequence="100"
  >
  <send>passleader("bone")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get an emblem of Tul-Sith from corpse of Granpater Laur."
   send_to="12"
   sequence="100"
  >
  <send>passleader("emblem")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="You get an enormous ant chakram from corpse of *"
   sequence="100"
  >
  <send>give psiwield1 opa</send>
  </trigger>
  <trigger
   group="classcle"
   keep_evaluating="y"
   match="You have already invoked a powerful pantheon spell."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'artificer blessing'")
remActionQueue("c 'protective vigil'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classpsi"
   match="You have been KILLED!!"
   sequence="100"
  >
  <send>stand
c 'minds eye'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="You have been KILLED!!"
   sequence="100"
  >
  <send>stand
quicken off</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="RaceDRC"
   match="You have been KILLED!!"
   sequence="100"
  >
  <send>stand
c eulogy
look</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autotrack"
   match="You have found your quarry!!"
   sequence="100"
  >
  <send>emo found his quarry!!</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autotrackwalk"
   match="You have found your quarry!!"
   send_to="12"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autotrackwalk", false)</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You have no idea how to sneak!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("sneak=sneak")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You have practiced unholy rampage to * percent.*"
   sequence="100"
  >
  <send>t self |BW|tingled unholy rampage to %1 percent
</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="You have to stand up before you do that"
   sequence="100"
  >
  <send>
wake</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You imbue your weapons with consciousness."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'conscious weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You imbue your weapons with intelligence."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'intelligent weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You imbue your weapons with the ability to disable."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'disabling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You imbue your weapons with the ability to fell."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'felling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="You imbue your weapons with the ability to stun."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'stunning weapon'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   ignore_case="y"
   match="You join *'s group."
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>updateGroupLeader("%1")
</send>
  </trigger>
  <trigger
   custom_colour="8"
   group="autobow"
   match="You just shot your last (.+?) (.+)!"
   regexp="y"
   sequence="100"
  >
  <send>
wear %2</send>
  </trigger>
  <trigger
   group="autobow"
   match="You just shot your last *!"
   name="autoreloadbow"
   sequence="100"
  >
  <send>
wear %1</send>
  </trigger>
  <trigger
   group="autoalert"
   keep_evaluating="y"
   match="You keep your eyes peeled and your ears to the ground!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("alert=alert")</send>
  </trigger>
  <trigger
   group="classwzd"
   keep_evaluating="y"
   match="You manipulate the Ether to your advantage."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'ether link'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classpsi"
   match="You must be wielding two weapons to use this spell!"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Send("emo could be missing his |by|weapons")
end
Execute("ww")</send>
  </trigger>
  <trigger
   group="classwzd"
   keep_evaluating="y"
   match="You no are no longer linked to others through the Ether."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'ether link'")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You no longer feel stealthy."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("sneak=sneak")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You no longer move hidden."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("m=m")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="autosneak"
   keep_evaluating="y"
   match="You no longer move in the shadows."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("shadow=shadow")
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="q_frenzy"
   keep_evaluating="y"
   match="You now have Divine Awen."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="q_frenzy_quicken"
   keep_evaluating="y"
   match="You now have Divine Awen."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c frenzy")</send>
  </trigger>
  <trigger
   group="classsor"
   keep_evaluating="y"
   match="You now have a death shroud."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'death shroud'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autocast"
   keep_evaluating="y"
   match="You punch a hole through the fabric of space, and a portal appears!"
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("emo portal is up")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="queue"
   keep_evaluating="y"
   match="You receive * experience points."
   send_to="12"
   sequence="100"
  >
  <send>setKilling(false)
execActionQueue()</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Lotto"
   keep_evaluating="y"
   match="You remove * from your group."
   send_to="12"
   sequence="100"
  >
  <send>remLotto("%1")
remGroupie("%1")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autostab"
   match="You scan your surroundings..."
   send_to="12"
   sequence="100"
  >
  <send>setDisabledStabName(true)
EnableTrigger("stabNameControl",true)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="psiWeapons"
   match="You send * to attack *"
   send_to="12"
   sequence="100"
  >
  <send>addWeaponsAlt(GetVariable("playername"),"%1")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autotrack"
   match="You sense that * is near, but you have no idea where."
   sequence="100"
  >
  <send>emo sense that %1 is near, but have no idea where.</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You sink deeper into a bladetrance."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("bladetrance deepen")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You sink into a bladetrance."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("bladetrance enter")
addActionQueue("bladetrance deepen")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="You sleep.*"
   send_to="12"
   sequence="100"
  >
  <send>Execute("save")
doAfter (300, "stand=stand")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="You slowly come out of your rage."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("scar")</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_frenzy"
   keep_evaluating="y"
   match="You slowly come out of your rage."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c frenzy")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="q_frenzy_quicken"
   keep_evaluating="y"
   match="You slowly come out of your rage."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("quicken 9=c frenzy=quicken off")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="setleader"
   ignore_case="y"
   match="You stop following *."
   send_to="12"
   sequence="100"
   variable="groupleader"
  >
  <send>updateGroupLeader("notanker")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classpsi"
   keep_evaluating="y"
   match="You stop using Yorimandil's Blindfold."
   sequence="100"
  >
  <send>c 'minds eye'</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="You stop using inspiring dance."
   sequence="100"
  >
  <send>gt Inspire down</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbld"
   keep_evaluating="y"
   match="You stop using veil of blades."
   send_to="12"
   sequence="100"
  >
  <send>Send("bladetrance break")</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   keep_evaluating="y"
   match="You successfully rescue *"
   send_to="12"
   sequence="100"
  >
  <send>setRescue(true)

if GetVariable("playername") == "Ica" then
 -- Send("ff")
end</send>
  </trigger>
  <trigger
   group="Outros"
   keep_evaluating="y"
   match="You successfully rescue *"
   name="flashrescue"
   sequence="100"
  >
  <send>ff</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="You wake and stand up."
   send_to="10"
   sequence="100"
  >
  <send>xq</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classpsi"
   match="You wield *."
   name="psiwield"
   send_to="12"
   sequence="100"
  >
  <send>doAfter(1, "oncast")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classmonshf"
   keep_evaluating="y"
   match="You wield *."
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Send("gt |BR|Monk type wielding a weapon, this doesn't look good|N|")
end</send>
  </trigger>
  <trigger
   custom_colour="3"
   enabled="y"
   group="q_sanc"
   keep_evaluating="y"
   match="Your Iron Monk style fades."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("sanc")</send>
  </trigger>
  <trigger
   custom_colour="4"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   make_bold="y"
   match="Your attack* strike* * time* with *!"
   send_to="12"
   sequence="100"
   other_text_colour="yellow"
  >
  <send>setKilling(true)</send>
  </trigger>
  <trigger
   custom_colour="4"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   make_bold="y"
   match="Your attacks haven't hurt *!"
   send_to="12"
   sequence="100"
   other_text_colour="yellow"
  >
  <send>setKilling(true)</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="RaceMiraar"
   keep_evaluating="y"
   match="Your body changes to match *'s!"
   send_to="12"
   sequence="100"
  >
  <send>addShape("%1")
remActionQueue("rac shapeshift " .. "%1")</send>
  </trigger>
  <trigger
   group="classmonshf"
   keep_evaluating="y"
   match="Your counterattack knocks * down!"
   send_to="12"
   sequence="100"
  >
  <send>if getTierChar() == "Lord" then
  SendNoEcho("ctr hit stay")
  SendNoEcho("ctr crush stay")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="GAG"
   match="Your filters have been changed."
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   expand_variables="y"
   group="classcle"
   keep_evaluating="y"
   match="Your grim harvest comes to an end."
   sequence="100"
  >
  <send>t self grim harvest (cast) gone</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classmonshf"
   keep_evaluating="y"
   match="Your hands return to normal."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'stone fist'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="Your innate mental strength rejects your own frenzy spell!"
   send_to="10"
   sequence="100"
  >
  <send>rq frenzy</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rampage"
   match="Your killing spree has come to an end."
   sequence="100"
  >
  <send>t self rampage gone</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classsor"
   keep_evaluating="y"
   match="Your mind drifts off onto the joy of killing!"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  SendNoEcho("emo |BC| tainted")
end
</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="autocast"
   keep_evaluating="y"
   match="Your mystical barrier shimmers and is gone."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'mystical barrier'")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autocast"
   keep_evaluating="y"
   match="Your spell fizzles."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("emo Spell fizzles")</send>
  </trigger>
  <trigger
   group="classstm"
   keep_evaluating="y"
   match="Your spring rain stratum disperses!"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("ssr")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classcle"
   keep_evaluating="y"
   match="Your unholy rampage comes to an end."
   sequence="100"
  >
  <send>t self rampage (dmg) gone</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons already possess consciousness."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'conscious weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons already possess intelligence."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'intelligent weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons already possess the ability to disable."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'disabling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons already possess the ability to fell."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'felling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons already possess the ability to stun."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("c 'stunning weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons lose the ability to disable."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'disabling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons lose the ability to fell."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'felling weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons lose the ability to stun."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'stunning weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons lose their consciousness."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'conscious weapon'")</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="Your weapons will no longer intelligently attack your opponents."
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("c 'intelligent weapon'")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="groupDeathInfo"
   match="[DEATH INFO]: * killed by * in *."
   send_to="12"
   sequence="100"
  >
  <send>checkGroupDeathInfo("%1")</send>
  </trigger>
  <trigger
   group="gurney"
   keep_evaluating="y"
   match="[LORD INFO]: * has just shifted to *!"
   sequence="100"
  >
  <send>
c gurney %1</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   ignore_case="y"
   keep_evaluating="y"
   match="[LORD INFO]: @playername has just returned to Thorngate!"
   send_to="12"
   sequence="100"
  >
  <send>if WorldName() == "Leader" then
    Execute("offrun")
end


</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   ignore_case="y"
   keep_evaluating="y"
   match="[LORD INFO]: @playername has just shifted to Thorngate!"
   send_to="12"
   sequence="100"
  >
  <send>if WorldName() == "Leader" then
    Execute("offrun")
end
</send>
  </trigger>
  <trigger
   custom_colour="14"
   enabled="y"
   expand_variables="y"
   group="psiWeapons"
   lines_to_match="4"
   keep_evaluating="y"
   match="\A(\w+) concentrates deeply\.\.\.\n(\w+)'s weapons dance through the air\!\n(.*) returns to .*'s hand\.\n(.*) returns to .*'s hand\.\Z"
   multi_line="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("w2 1: %1 2: %2 3: %3 4: %4")
addWeaponsAlt("%1","%3")
addWeaponsAlt("%1","%4")
</send>
  </trigger>
  <trigger
   custom_colour="14"
   enabled="y"
   expand_variables="y"
   group="psiWeapons"
   lines_to_match="4"
   keep_evaluating="y"
   match="\AYour weapons dance through the air\!\n.*\n(.*) returns to your hand\.\n(.*) returns to your hand\.\Z"
   multi_line="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>addWeaponsAlt(GetVariable("playername"),"%1")
addWeaponsAlt(GetVariable("playername"),"%2")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="InvList"
   keep_evaluating="y"
   match="\s*(\(\s*(\d*)\))*\s*(\(.*\))*\s*(a |an |the )*(.*)"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>addInventoryItem("%5","%2")</send>
  </trigger>
  <trigger
   enabled="y"
   group="corp_loot"
   keep_evaluating="y"
   match="^(.*) leaves behind a perfect (.*) due to an artificer blessing!$"
   regexp="y"
   sequence="100"
  >
  <send>
emo |BC| Pgem popped from artificer blessing!</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="^(.*) leaves behind a perfect (.*)!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>getpassleader("perfect", false)</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   ignore_case="y"
   match="^(.*?)Cunno(.*?) tells the group \'heal\'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Execute("heal")
doAfter(5, "recall")</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="Counters"
   ignore_case="y"
   keep_evaluating="y"
   match="^(@!monDamList)\'s (.*?) with (.*?)(@!dverbsShort)(.*?) (@!dverbsIntensity)(.*?)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>addDamage("%1", "%4")</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="Counters"
   ignore_case="y"
   keep_evaluating="y"
   match="^(@!monDamList)\'s attacks haven't hurt (.*?)!$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="^(\*)*(.*?)(\*)* tells the group \'add me\'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
&#9;found = 0

&#9;if rescuelist == nil then
&#9;  rescuelist = {}
&#9;end

&#9;for i = 1, #rescuelist do
&#9;  if string.lower(rescuelist[i]) == string.lower("%2") then 
&#9;&#9;found = 1 
&#9;  end
&#9;end

&#9;if found == 1 then
&#9;  ColourNote("red", "white", "%2" .. " already in the rescue list!")
&#9;else
&#9;  table.insert(rescuelist, "%2")
&#9;  ColourNote("red", "white", "%2" .. " added to rescue list!")
&#9;end
end</send>
  </trigger>
  <trigger
   enabled="y"
   group="autorescue"
   match="^(\*)*(.*?)(\*)* tells the group \'remove me\'$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>indexToRemove = -1

for i = 1, #rescuelist do
  if string.lower(rescuelist[i]) == string.lower("%2") then 
    indexToRemove = i 
  end
end

if indexToRemove == -1 then
  ColourNote("red", "white", "%2" .. " wasn't in the rescue list!")
else
  table.remove(rescuelist, indexToRemove)
  ColourNote("red", "white", "%2" .. " removed from rescue list!")
end
</send>
  </trigger>
  <trigger
   custom_colour="4"
   expand_variables="y"
   group="Counters"
   ignore_case="y"
   keep_evaluating="y"
   match="^(you|your) (.*?) with (.*?)(@!dverbsShort)(.*?) (@!dverbsIntensity)(.*?)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("p1: %1")
--Note("p2: %2")
--Note("p3: %3")
--Note("p4: %4")
--Note("p5: %5")
--Note("p6: %6")
addDamage("%1", "%4")</send>
  </trigger>
  <trigger
   custom_colour="3"
   expand_variables="y"
   group="RoomCheck"
   match="^.*(Lord|Lady)? (\w+) is .*here\."
   name="roomcheckplayers"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>addRoomList("%2")

</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="autorescue"
   keep_evaluating="y"
   match="^.*?\/.*?Hp .*?\/.*?Ma .*?Mv .*?Xp .*?Lag .*?\:.*?\:.*? (.*?)\/(.*?)Hp (.*?)$"
   name="chainrescuetrigger"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() and canRescue == true then

hpmon = tonumber("%1")

if getTierChar() == "Lord" then
  limite = 20000
elseif getTierChar() == "Hero" then
  limite = 1000
end

--Note("hpmon " .. hpmon)

  if hpmon ~= nil and hpmon &lt; limite then
    Execute("rescue") 
    setRescue(false)
    Execute("offchain") 
  end
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="portal"
   ignore_case="y"
   keep_evaluating="y"
   match="^@groupleader enters (a|an|the) (\w+)(.*?)\.$"
   regexp="y"
   sequence="100"
  >
  <send>
enter %2</send>
  </trigger>
  <trigger
   custom_colour="9"
   enabled="y"
   expand_variables="y"
   group="psiWeapons"
   keep_evaluating="y"
   match="^I see no \d* here\.$"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   custom_colour="6"
   expand_variables="y"
   group="detectClass"
   match="^Level \d+\(\d+\) .* (Sorcerer|Druid|Ranger|Warrior|Priest|Assassin|Bladedancer|Paladin|Wizard|Bodyguard|Archer|Psionicist|Mage|Monk|Mindbender|Stormlord|Black Circle Initiate|Berserker|Rogue|Fusilier|Shadowfist|Cleric|Vizier)    Exp/TNL:.*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--Note("Class 1: " .. "%1")
detectClass("%1")</send>
  </trigger>
  <trigger
   custom_colour="4"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   match="^Welcome( back)* to the AVATAR System\, (.*?) (.*?)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>local tier = "%2"

if tier == "Lady" then
  tier = "Lord"
end
  
setTierChar(tier)

defineStabAction("%2")

if "%3" == "Opa" then
 Execute("onmir")
elseif "%3" == "Hoje" then
 Execute(" ")
 Execute("stand")
 Execute("take")
elseif "%3" == "Blackmail" then
 Execute(" ")
 Execute("stand")
 Execute("master")
end</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="^You failed your (homeshift|planeshift) due to lack of concentration!"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>Send("emo failed %1")
</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   match="^You feel a slight headache growing stronger...$"
   regexp="y"
   sequence="100"
  >
  <send>c water
c 'chill touch'
c 'cure light'</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   match="^You have been KILLED\!\!$"
   regexp="y"
   sequence="100"
  >
  <send>stand
down
east
east
gt back to ee after death :(</send>
  </trigger>
  <trigger
   group="autotrackwalk"
   keep_evaluating="y"
   match="^You see your quarry\'s trail head (north|south|east|west|up|down) from here\!$"
   regexp="y"
   sequence="100"
  >
  <send>
%1


</send>
  </trigger>
  <trigger
   group="autotrack"
   keep_evaluating="y"
   match="^You see your quarry\'s trail head (north|south|east|west|up|down) from here\!$"
   regexp="y"
   sequence="100"
  >
  <send>
emo track points |bc|%1


</send>
  </trigger>
  <trigger
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   match="^You see your quarry\'s trail head (north|south|east|west|up|down) from here\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>
ColourNote ("white", "red", "Track dir is " .. string.upper("%1"))
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classsor"
   keep_evaluating="y"
   match="^Your gain is\: (.*?)\/(.*?) hp\, (.*?)\/(.*?) m\, (.*?)\/(.*?) mv (.*?)\/(.*?) prac\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  SendNoEcho("c taint")
end
</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="advantage and put out brightly coloured berries."
   sequence="100"
  >
  <send>get all bush</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="advantage and put out brightly coloured berries."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Berries)")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classmag"
   keep_evaluating="y"
   match="bla bla bla"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="climbs steeply up to the west."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Pass)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   match="discolouration of yellow and white lichen clinging to the rock faces."
   sequence="100"
  >
  <send>look cleft</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="corp_loot"
   keep_evaluating="y"
   match="help but stop and give silent homage to this colossus of trees."
   sequence="100"
  >
  <send>get bark</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="help but stop and give silent homage to this colossus of trees."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Get Bark)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="obvious route to the higher slopes to the east."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Canyon)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   match="rise up the touch the sky itself, leaving you feeling very small."
   sequence="100"
  >
  <send>look passage
look canyon</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="small pool at the cliff's base."
   sequence="100"
  >
  <send>look defile</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classdru"
   keep_evaluating="y"
   match="this is a trigger to identify a druid class"
   name="classdru"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   keep_evaluating="y"
   match="to western slopes."
   send_to="12"
   sequence="100"
  >
  <send>Note("(Enter Defile)")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="room_desc"
   match="wild flowers grow here and there."
   sequence="100"
  >
  <send>look riverbed
look pass</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Diamante's Pointy Stick."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Garra Stick."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Graveto."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Orion's Pointy Stick."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Selfie Stick."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   group="classpsi"
   keep_evaluating="y"
   match="xxx * gives you Unha Stick."
   send_to="12"
   sequence="100"
  >
  <send>SendNoEcho("ww")
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classpsi"
   match="xxx * tells the group 'preach finished!'"
   send_to="12"
   sequence="100"
  >
  <send>if isMday() then
  Execute("w=w=n=u=retrieve hammer=d=e=e=c orbit hammer")
else
  Send("ham")
end
</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="autobow"
   keep_evaluating="y"
   match="xxx No such target can be seen in the specified direction."
   sequence="100"
  >
  <send>gt No such target can be seen in the specified direction.</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="classbld"
   keep_evaluating="y"
   match="xxx You are not even in a bladetrance."
   sequence="100"
  >
  <send>bladetrance enter
bladetrance deepen</send>
  </trigger>
  <trigger
   keep_evaluating="y"
   match="xxx* tells you 'alrin *'"
   send_to="12"
   sequence="100"
  >
  <send>Execute("%2")
</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="xxxSlowly dragging your blade across your chest, you leave a deep scar."
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar=scar")</send>
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rampage"
   match="xxxTor surrounds you with a malevolent blessing."
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   expand_variables="y"
   group="rampage"
   match="xxxYou are already driven by an unholy rampage!"
   sequence="100"
  >
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="xxxYou don a crimson mask as you slice open your own forehead!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar=scar")</send>
  </trigger>
  <trigger
   keep_evaluating="y"
   match="xxxYou dream of * telling you 'alrin *'"
   send_to="10"
   sequence="100"
  >
  <send>
%2</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="tingle"
   keep_evaluating="y"
   match="xxxYou failed your unholy rampage due to lack of concentration!"
   sequence="100"
  >
  <send>stand</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="xxxYou gouge deep into your arm with your weapon!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar=scar")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="xxxYou slice your hand and raise your shaking fist as blood flows down your arm!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar=scar")</send>
  </trigger>
  <trigger
   custom_colour="3"
   group="classbzk"
   keep_evaluating="y"
   match="xxxYou slit yourself up a treat!"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("scar=scar")</send>
  </trigger>
  <trigger
   expand_variables="y"
   group="areacaster"
   keep_evaluating="y"
   match="* tell* the group 'on boss'"
   send_to="12"
   sequence="110"
  >
  <send>Execute("offcast")

SendNoEcho("s3")

runAfter(10, 'EnableTimer ("autocastarea", true)')
</send>
  </trigger>
</triggers>

<!-- aliases -->

<aliases
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >
  <alias
   match="*=c plane *"
   enabled="y"
   expand_variables="y"
   group="repeat"
   variable="currentPlane"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Execute("%1")
planeTo("%2")</send>
  </alias>
  <alias
   match="SubName(*,*)"
   enabled="y"
   expand_variables="y"
   group="subs"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SubName('%1','%2')</send>
  </alias>
  <alias
   match="SubNameAggie(*,*)"
   enabled="y"
   expand_variables="y"
   group="subs"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SubNameAggie('%1','%2')</send>
  </alias>
  <alias
   match="SubNameLord(*,*)"
   enabled="y"
   expand_variables="y"
   group="subs"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SubNameLord('%1','%2')</send>
  </alias>
  <alias
   match="^inv$"
   enabled="y"
   expand_variables="y"
   group="InvList"
   regexp="y"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger("youCarrying",true)
SendNoEcho("config -condition")
SendNoEcho("config -label")
clearInventoryList()
SendNoEcho("inventory")
</send>
  </alias>
  <alias
   match="^onbash\s?(\w*?)$"
   enabled="y"
   group="triggertoggler"
   regexp="y"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setBash(true, "%1")
Note("autobash on")</send>
  </alias>
  <alias
   name="RescueListAddCurrentSelection"
   match="addCurSelRescue"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   send_to="12"
   menu="y"
   keep_evaluating="y"
   sequence="100"
  >
  <send>addCurSelRescue()</send>
  </alias>
  <alias
   match="aff *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>aff ?%1</send>
  </alias>
  <alias
   match="alleg"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="11"
   keep_evaluating="y"
   sequence="100"
  >
  <send>7susw</send>
  </alias>
  <alias
   match="allnex"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>enter nexus
deposit all
withdraw ruby
enter nexus
give ruby alleg</send>
  </alias>
  <alias
   match="allrc"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castrc('@playername')")</send>
  </alias>
  <alias
   match="ann *"
   enabled="y"
   group="Outros"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>Execute("lord |bw|%1")
Execute("hero |bw|%1")
Execute("chat |bw|%1")
Note("Set leadership")
Note("Set leadership")
Note("Set leadership")
</send>
  </alias>
  <alias
   match="aq *"
   enabled="y"
   group="queue"
   send_to="12"
   sequence="100"
  >
  <send>addActionQueue("%1")</send>
  </alias>
  <alias
   match="aug *"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/aug('%1')")
</send>
  </alias>
  <alias
   match="autologin"
   enabled="y"
   expand_variables="y"
   group="autologin"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Execute(GetInfo(2))</send>
  </alias>
  <alias
   match="autorescue"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>autoSetRescue()</send>
  </alias>
  <alias
   match="b *"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>buddy |w|%1</send>
  </alias>
  <alias
   match="bb *"
   group="Outros"
   sequence="100"
  >
  <send>buddy |bw|{|bg|Xi|by|ng|bw|} %1</send>
  </alias>
  <alias
   match="bt"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/bt()")
</send>
  </alias>
  <alias
   match="bte"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/bte()")
</send>
  </alias>
  <alias
   match="btyp"
   enabled="y"
   group="brand"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>executeBrandish()</send>
  </alias>
  <alias
   match="c home"
   enabled="y"
   expand_variables="y"
   group="repeat"
   variable="currentPlane"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SetVariable("currentPlane", "thorn")
Execute("cast homeshift")</send>
  </alias>
  <alias
   match="c plane *"
   enabled="y"
   expand_variables="y"
   group="repeat"
   variable="currentPlane"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>planeTo("%1")</send>
  </alias>
  <alias
   match="calm"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>quicken 9
c calm
quicken off</send>
  </alias>
  <alias
   match="casa"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sanctum
w
u
</send>
  </alias>
  <alias
   match="cc *"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castcc('%1')")
</send>
  </alias>
  <alias
   match="cfr*"
   expand_variables="y"
   group="classviz"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>castFinalRites("%1")</send>
  </alias>
  <alias
   match="cla"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castcla()")
</send>
  </alias>
  <alias
   match="clearpsi"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>clearPsiWeapons()</send>
  </alias>
  <alias
   match="clearrescue"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>rescuelist = {}
ColourNote("red", "white", "Rescue List cleared")</send>
  </alias>
  <alias
   match="cq"
   enabled="y"
   group="queue"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>clearActionQueue()
ColourNote("red", "white", "Queue list cleared!")</send>
  </alias>
  <alias
   match="cr"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>clearRoomList()
EnableTriggerGroup ("RoomCheck", true)
SendNoEcho("look")

</send>
  </alias>
  <alias
   match="csp"
   expand_variables="y"
   group="classviz"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>castSanguenPax()</send>
  </alias>
  <alias
   match="d1"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>drop 1.</send>
  </alias>
  <alias
   match="dc *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>drop %1 coins</send>
  </alias>
  <alias
   match="dd *"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castdd('%1')")
</send>
  </alias>
  <alias
   match="detectClass"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>resetLoggedChar()
EnableTriggerGroup ("detectClass", true)
Execute("score")</send>
  </alias>
  <alias
   match="dmg *"
   enabled="y"
   group="Counters"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>counterCommand("%1")</send>
  </alias>
  <alias
   match="eulo *"
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   sequence="100"
  >
  <send>tell %1 @strOrder stand
tell %1 @strOrder d
tell %1 @strOrder e
tell %1 @strOrder e
tell %1 @strOrder c eulo
tell %1 @strOrder look
</send>
  </alias>
  <alias
   match="g1"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>get 1. xmain</send>
  </alias>
  <alias
   match="gac"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SendNoEcho("get all 1.corpse")
SendNoEcho("get all 2.corpse")
SendNoEcho("get all 3.corpse")
SendNoEcho("get all 4.corpse")
SendNoEcho("get all 5.corpse")
SendNoEcho("get all 6.corpse")
SendNoEcho("get all 7.corpse")
SendNoEcho("get all 8.corpse")
SendNoEcho("get all 9.corpse")
SendNoEcho("get all 10.corpse")</send>
  </alias>
  <alias
   match="gclear"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>clearGroupList()
ColourNote("red", "white", "GroupList cleared!")</send>
  </alias>
  <alias
   match="gmake"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>groupMake()</send>
  </alias>
  <alias
   match="go * *"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>grouporder %1 %2</send>
  </alias>
  <alias
   match="gorder"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>orderGroupList()</send>
  </alias>
  <alias
   match="gpass *"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>passItemGroup("%1")</send>
  </alias>
  <alias
   match="grem *"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>offWindow()
remGroupie("%1")
ColourNote("red", "white", "%1 removed from groupList!")</send>
  </alias>
  <alias
   match="gshow"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>showGroupList()</send>
  </alias>
  <alias
   match="gtyp"
   enabled="y"
   group="brand"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>storeTyphus()</send>
  </alias>
  <alias
   match="idtyp"
   enabled="y"
   group="brand"
   keep_evaluating="y"
   sequence="100"
  >
  <send>get xbrand xmain=g typhus xbrand=c id typhus=put typhus xbrand=put xbrand xmain
</send>
  </alias>
  <alias
   match="igu"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>say i give up</send>
  </alias>
  <alias
   match="inf"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>sanctum
d
w</send>
  </alias>
  <alias
   match="insureaddall"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>
insure add 1.
insure add 2.
insure add 3.
insure add 4.
insure add 5.
insure add 6.
insure add 7.
insure add 8.
insure add 9.
insure add 10.
insure add 11.
insure add 12.
insure add 13.
insure add 14.
insure add 15.
insure add 16.
insure add 17.
insure add 18.
insure add 19.
insure add 20.
insure add 21.
insure add 22.
insure add 23.
insure add 24.
insure add 25.
insure add 26.
insure add 27.
insure add 28.
insure add 29.
insure add 30.
</send>
  </alias>
  <alias
   match="insureremall"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>
insure cancel 1.
insure cancel 2.
insure cancel 3.
insure cancel 4.
insure cancel 5.
insure cancel 6.
insure cancel 7.
insure cancel 8.
insure cancel 9.
insure cancel 10.
insure cancel 11.
insure cancel 12.
insure cancel 13.
insure cancel 14.
insure cancel 15.
insure cancel 16.
insure cancel 17.
insure cancel 18.
insure cancel 19.
insure cancel 20.
insure cancel 21.
insure cancel 22.
insure cancel 23.
insure cancel 24.
insure cancel 25.
insure cancel 26.
insure cancel 27.
insure cancel 28.
insure cancel 29.
insure cancel 30.
insure add xmain</send>
  </alias>
  <alias
   match="invgt"
   enabled="y"
   expand_variables="y"
   group="InvList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Send("gt " .. listToString(inventoryList))</send>
  </alias>
  <alias
   match="invlist"
   enabled="y"
   expand_variables="y"
   group="InvList"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Note(listToString(inventoryList))</send>
  </alias>
  <alias
   match="ip *"
   expand_variables="y"
   group="classprs"
   keep_evaluating="y"
   sequence="100"
  >
  <send>quicken 9
preach inno
%1
quicken off
cast pardon</send>
  </alias>
  <alias
   match="lastall"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>last Meiodia
last Lais
last Luccian
last Arroz
last Cagao
last Padre
last Tinna
last Ravengar
last Xing
last Tele
last Noone
last Lud
last Indio
last Williamtell
last Feiticeiro
last Bom
last Flecha
last Cabeca
last Remo
last Juvenal
last Bid
last Xingu
last Zingu
last Ica
last Lollis
last Tuga
last Raposao
last Capelao
last Blackmail
last Mecao
last Tuazd
last Kubrick
last Dois
last Pequeno
last Duno
last Romulo
last Uno
last Grande
last Boi
last Papapop
last Yay
last Vinyl
last Opa
last Way
last Quatro
last Larin
last Motta
last Fido</send>
  </alias>
  <alias
   match="le"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>lotto exclude</send>
  </alias>
  <alias
   match="lieut"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>leadership switch LIEUTENANT</send>
  </alias>
  <alias
   match="link"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>linkrefresh group</send>
  </alias>
  <alias
   match="log *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>defineNextChar("%1")</send>
  </alias>
  <alias
   match="lottoadd *"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>addLotto("%1")</send>
  </alias>
  <alias
   match="lottoclear"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>clearLottoNames()
ColourNote("red", "white", "Lotto list cleared")</send>
  </alias>
  <alias
   match="lottogt"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Send("gt Lotto list is: " ..  listToString(lottoNames))</send>
  </alias>
  <alias
   match="lottorem *"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remLotto("%1")</send>
  </alias>
  <alias
   match="lottors"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remLotto(GetVariable("playername"))</send>
  </alias>
  <alias
   match="lottoshow"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>&#9;ColourNote("red", "white", "Lotto list")

&#9;for k,v in pairs(lottoNames) do
&#9;&#9;ColourNote("red", "white", v)
&#9;end</send>
  </alias>
  <alias
   match="lstlotto"
   enabled="y"
   expand_variables="y"
   group="Lotto"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>showLotto()</send>
  </alias>
  <alias
   match="makevault"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>get orb vau
get orb vau
get orb vau
get orb vau
get orb vau
get powder vau
get powder vau
get powder vau
get powder vau
get powder vau
get cryst vau
get cryst vau
get treat vau
get treat vau
get treat vau
get cat vau
get cat vau
get cat vau
get sarong vau
get sarong vau
get sarong vau
get jade vau
get rod vau
get rod vau
get fae vau
get fae vau
get iguana vau
get book vau
get book vau
get wind vau
get gith vau
get gith vau
get gith vau
get unsee vau
get mirror vau
get choker vau
get blindf vau
get sandb vau
get sandb vau
get crop vau</send>
  </alias>
  <alias
   match="master"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>
leadership switch mastermind</send>
  </alias>
  <alias
   match="mm"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castmm()")
</send>
  </alias>
  <alias
   match="mm*"
   expand_variables="y"
   group="classviz"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>if getTierChar() == "Hero" then
&#9;castPhlebotomize("%1")
else
&#9;castEnervate("%1")
end&#9;</send>
  </alias>
  <alias
   match="mra"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>morgue retrieve all</send>
  </alias>
  <alias
   match="ms"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castms()")
</send>
  </alias>
  <alias
   match="offalert"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autoalert", false)
Note("keep alert off")</send>
  </alias>
  <alias
   match="offawful"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setAwfulCast(false)
Note("awfulCast off")
Execute("oncast")
Execute("onpsiwield")</send>
  </alias>
  <alias
   match="offbash"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setBash(false)
Note("autobash false")</send>
  </alias>
  <alias
   match="offboss"
   enabled="y"
   group="mday"
   sequence="100"
  >
  <send>gt off boss</send>
  </alias>
  <alias
   match="offbrand"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autobrand", false)
Note("brand off")</send>
  </alias>
  <alias
   match="offcast"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setLag0Cast(false)
updateTriggerStatusList()
Note("autocast off")</send>
  </alias>
  <alias
   match="offchain"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger ("chainrescuetrigger", false)
Note("autochainrescue false")</send>
  </alias>
  <alias
   match="offcounter"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("Counters", false)
Note("Dmg counter off")</send>
  </alias>
  <alias
   match="offdeath"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("groupDeathInfo", false)
Note("Groupie Death Info OFF")</send>
  </alias>
  <alias
   match="offdmg"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("Counters", false)
Note("dmg counter off")
SendNoEcho("config +battlenone")</send>
  </alias>
  <alias
   match="offfilter"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SendNoEcho("filter -roomindiv")
SendNoEcho("filter -spellother")
SendNoEcho("filter -lookother")
SendNoEcho("filter -positionother")
Note("filters off")</send>
  </alias>
  <alias
   match="offflash"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger("flashrescue",false)
Note("flashrescue off")</send>
  </alias>
  <alias
   match="offfrenzy"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("q_frenzy", false)
Note("keepFrenzy off")</send>
  </alias>
  <alias
   match="offgold"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autogold", false)
Note("pickup gold off")</send>
  </alias>
  <alias
   match="offgurney"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("gurney", false)
Note("autogurney off")</send>
  </alias>
  <alias
   match="offidstab"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>offStabById()
Note("StabById trigger off")</send>
  </alias>
  <alias
   match="offmday"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("mday", false)
Note("mday off")</send>
  </alias>
  <alias
   match="offmir"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("RaceMiraar", false)
Note("Miraar off")</send>
  </alias>
  <alias
   match="offportal"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup("autoportal",false)
Note("autoportal off")</send>
  </alias>
  <alias
   match="offpsi"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("psi", false)
Note("psi grabbing off")</send>
  </alias>
  <alias
   match="offpsisolo"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>psiSolo(false)
Note("psi solo off")</send>
  </alias>
  <alias
   match="offpsiwield"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger ("psiwield", false)
Note("psiwield false")</send>
  </alias>
  <alias
   match="offrepeat"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue ("repeat", false)
Note("repeat false")</send>
  </alias>
  <alias
   match="offrescue"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("autorescue", false)
updateTriggerStatusList()
Note("autorescue off")</send>
  </alias>
  <alias
   match="offrite"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger("vizfinalrites",false)
Note("vizfinalrites off")</send>
  </alias>
  <alias
   match="offrun"
   enabled="y"
   group="mday"
   sequence="100"
  >
  <send>gt off run</send>
  </alias>
  <alias
   match="offsanc"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("q_sanc", false)
Note("keepSanc off")</send>
  </alias>
  <alias
   match="offshape"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("RaceMiraar", false)
</send>
  </alias>
  <alias
   match="offslip"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>setSlipStatus(false)
updateTriggerStatusList()
Note("slip off")</send>
  </alias>
  <alias
   match="offstab"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>offStab()
Note("stab off")
</send>
  </alias>
  <alias
   match="offtarget"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("iskilling", false)
updateTriggerStatusList()
Note("iskilling off")</send>
  </alias>
  <alias
   match="offtingle"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("tingle", false)
Note("Tingle off")</send>
  </alias>
  <alias
   match="offtrack"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autotrack", false)
Note("autotrack off")</send>
  </alias>
  <alias
   match="offtrackwalk"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autotrackwalk", false)
Note("autotrackwalk off")</send>
  </alias>
  <alias
   match="offtrigger"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>offWindowTrigger()
Note("windowTrigger off")</send>
  </alias>
  <alias
   match="offvizdmg"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizDmg(false)
Note("vizdmg off")</send>
  </alias>
  <alias
   match="offvizfr"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizFr(false)
Note("vizfr off")</send>
  </alias>
  <alias
   match="offvizheal"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizHeal(false)
Note("vizheal off")</send>
  </alias>
  <alias
   match="offvizpool"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setShowVizPool(false)
Note("show viz pool off")</send>
  </alias>
  <alias
   match="offvizss"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizSs(false)
Note("vizss off")</send>
  </alias>
  <alias
   match="offwalking"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>offWalking()
Send("filter +walkother")
Note("Kill walking trigger off")</send>
  </alias>
  <alias
   match="offwindow"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>offWindow()
Note("windowMon off")</send>
  </alias>
  <alias
   match="onalert"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autoalert", true)
Note("keep alert on")</send>
  </alias>
  <alias
   match="onawful"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setAwfulCast(true)
Note("awfulCast on")
Execute("offcast")
Execute("offpsiwield")</send>
  </alias>
  <alias
   match="onboss"
   enabled="y"
   group="mday"
   sequence="100"
  >
  <send>gt on boss</send>
  </alias>
  <alias
   match="onbrand"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autobrand", true)
Note("brand on")</send>
  </alias>
  <alias
   match="oncast"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setLag0Cast(true)
updateTriggerStatusList()
Note("autocast on")</send>
  </alias>
  <alias
   match="onchain"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger ("chainrescuetrigger", true)
Note("autochainrescue on")</send>
  </alias>
  <alias
   match="ondeath"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("groupDeathInfo", true)
Note("Groupie Death Info ON")</send>
  </alias>
  <alias
   match="ondmg"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>addTableCounter("You")
EnableTriggerGroup ("Counters", true)
EnableTrigger("GroupGrabDmg", false)
Send("config +battlenone")
Note("Counters enabled to self only")</send>
  </alias>
  <alias
   match="ondmgall"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Execute("dmg populate")
Send("config -battlenone")
Note("Counters enabled to whole group")</send>
  </alias>
  <alias
   match="onfilter"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SendNoEcho("filter +roomindiv")
SendNoEcho("filter +spellother")
SendNoEcho("filter +lookother")
SendNoEcho("filter +positionother")
Note("filters on")</send>
  </alias>
  <alias
   match="onflash"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger("flashrescue",true)
Note("flashrescue on")</send>
  </alias>
  <alias
   match="onfrenzy"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("q_frenzy", true)
Note("keepFrenzy on")</send>
  </alias>
  <alias
   match="ongold"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autogold", true)
Note("pickup gold on")</send>
  </alias>
  <alias
   match="ongurney"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("gurney", true)
Note("autogurney on")</send>
  </alias>
  <alias
   match="onidstab*"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>onStabById("%1")
Note("StabById trigger on")</send>
  </alias>
  <alias
   match="onmday"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("mday", true)
Note("mday on")
Execute("onrepeat")</send>
  </alias>
  <alias
   match="onmir"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("RaceMiraar", true)
Note("Miraar on")</send>
  </alias>
  <alias
   match="onportal"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup("autoportal",true)
Note("autoportal on")</send>
  </alias>
  <alias
   match="onpsi"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("psi", true)
Note("psi grabbing on")</send>
  </alias>
  <alias
   match="onpsisolo"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>psiSolo(true)
Note("psi solo on")</send>
  </alias>
  <alias
   match="onpsiwield"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger ("psiwield", true)
Note("psiwield true")</send>
  </alias>
  <alias
   match="onrepeat"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue ("repeat", true)
Note("repeat true")</send>
  </alias>
  <alias
   match="onrescue"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("autorescue", true)
updateTriggerStatusList()
Note("autorescue on")</send>
  </alias>
  <alias
   match="onrite"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTrigger("vizfinalrites",true)
Note("vizfinalrites on")</send>
  </alias>
  <alias
   match="onrun"
   enabled="y"
   group="mday"
   send_to="10"
   sequence="100"
  >
  <send>ooo tuga preachup
gt on run
oo self
gt rest</send>
  </alias>
  <alias
   match="onsanc"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("q_sanc", true)
Note("keepSanc on")</send>
  </alias>
  <alias
   match="onsend *"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendOrder("ica","c plane %1") 
sendOrder("bid","c plane %1") 
sendOrder("ravengar","c plane %1") 

sendOrder("grande","rest") 
sendOrder("boi","rest") 

Send("gt send raposao %1")
Send("gt send xingu %1")

Send("gt send indio %1")
Send("gt send lollis %1")
Send("gt send quatro %1")
Send("gt send larin %1")

Send("gt send grande %1")
Send("gt send boi %1")

sendOrder("blackmail","c plane %1") 
sendOrder("dois","c plane %1")</send>
  </alias>
  <alias
   match="onshape"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("RaceMiraar", true)</send>
  </alias>
  <alias
   match="onslip"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>setSlipStatus(true)
updateTriggerStatusList()
Note("slip on")</send>
  </alias>
  <alias
   match="onstab*"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>onStab("%1")
Note("stab on")
</send>
  </alias>
  <alias
   match="ontarget"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("iskilling", true)
updateTriggerStatusList()
Note("iskilling on")</send>
  </alias>
  <alias
   match="ontingle"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setGroupValue("tingle", true)
Note("Tingle on")
Execute("stand")</send>
  </alias>
  <alias
   match="ontrack"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autotrack", true)
Note("autotrack on")</send>
  </alias>
  <alias
   match="ontrackwalk"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>EnableTriggerGroup ("autotrackwalk", true)
Note("autotrackwalk true")</send>
  </alias>
  <alias
   match="ontrigger"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>onWindowTrigger()
Note("windowTrigger on")</send>
  </alias>
  <alias
   match="onvizdmg"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizDmg(true)
Note("vizdmg on")</send>
  </alias>
  <alias
   match="onvizfr"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizFr(true)
Note("vizfr on")</send>
  </alias>
  <alias
   match="onvizheal"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizHeal(true)
Note("vizheal on")</send>
  </alias>
  <alias
   match="onvizpool"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setShowVizPool(true)
Note("show viz pool on")</send>
  </alias>
  <alias
   match="onvizss"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizSs(true)
Note("vizss on")</send>
  </alias>
  <alias
   match="onwalking*"
   enabled="y"
   expand_variables="y"
   group="triggertoggler"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>onWalking("%1")
Send("filter -walkother")
Note("Kill walking trigger on")</send>
  </alias>
  <alias
   match="onwindow"
   enabled="y"
   group="triggertoggler"
   send_to="12"
   sequence="100"
  >
  <send>onWindow()
Note("windowMon on")</send>
  </alias>
  <alias
   match="oo *"
   enabled="y"
   group="mday"
   send_to="12"
   sequence="100"
  >
  <send>sendToAllWorlds("%1")
</send>
  </alias>
  <alias
   match="ooo * *"
   enabled="y"
   group="mday"
   send_to="12"
   sequence="100"
  >
  <send>sendOrder("%1","%2")</send>
  </alias>
  <alias
   match="p1"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>put 1. xmain</send>
  </alias>
  <alias
   match="pan"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castpan()")
</send>
  </alias>
  <alias
   match="pc"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castpc()")
</send>
  </alias>
  <alias
   match="ps"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/castps()")
</send>
  </alias>
  <alias
   match="r *"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>
rescue %1</send>
  </alias>
  <alias
   match="ral *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>enter nexus
south
south
up
retrieve %1
down
north
north
enter nexus
drop %1</send>
  </alias>
  <alias
   name="SelectionRemoveGroupList"
   match="remCurSelGroup"
   enabled="y"
   expand_variables="y"
   group="GroupList"
   send_to="12"
   menu="y"
   keep_evaluating="y"
   sequence="100"
  >
  <send>offWindow()
remCurSelGroup()</send>
  </alias>
  <alias
   name="RescueListRemoveCurrentSelection"
   match="remCurSelRescue"
   enabled="y"
   group="autorescue"
   send_to="12"
   menu="y"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remCurSelRescue()</send>
  </alias>
  <alias
   match="repairall"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>
repair 1.
repair 2.
repair 3.
repair 4.
repair 5.
repair 6.
repair 7.
repair 8.
repair 9.
repair 10.
repair 11.
repair 12.
repair 13.
repair 14.
repair 15.
repair 16.
repair 17.
repair 18.
repair 19.
repair 20.
repair 21.
repair 22.
repair 23.
repair 24.
repair 25.
repair 26.
repair 27.
repair 28.
repair 29.
repair 30.</send>
  </alias>
  <alias
   match="rescueadd *"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>addRescue("%1")</send>
  </alias>
  <alias
   match="rescuerem *"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remRescue("%1")</send>
  </alias>
  <alias
   match="rescueset"
   enabled="y"
   group="mday"
   sequence="100"
  >
  <send>gt setting rescuers
</send>
  </alias>
  <alias
   match="rq *"
   enabled="y"
   group="queue"
   send_to="12"
   sequence="100"
  >
  <send>remActionQueue("%1")</send>
  </alias>
  <alias
   match="rs"
   enabled="y"
   group="Outros"
   sequence="100"
  >
  <send>recall set</send>
  </alias>
  <alias
   match="runreport"
   enabled="y"
   group="runcounter"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>runreport()</send>
  </alias>
  <alias
   match="runreset"
   enabled="y"
   group="runcounter"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>runreset()</send>
  </alias>
  <alias
   match="rwaterm"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remove waterm=put waterm xmain=wear all=s=s</send>
  </alias>
  <alias
   match="s+"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>config +savespell</send>
  </alias>
  <alias
   match="s-"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>
config -savespell</send>
  </alias>
  <alias
   match="salv *"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>Send("gt start salv %1")
doAfter(5, "gt salv %1")

</send>
  </alias>
  <alias
   match="setBuffer *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>SetOption ("max_output_lines", "%1") 
Note("Buffer size set to " .. "%1" .. " (min 200, max 500.000)")
</send>
  </alias>
  <alias
   match="setfilter"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="10"
   keep_evaluating="y"
   sequence="100"
  >
  <send>oo onfilter
ooo medo offfilter
ooo cagao offfilter
ooo bom offfilter
ooo opa offfilter</send>
  </alias>
  <alias
   match="setleader *"
   enabled="y"
   group="Outros"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("groupleader","%1")
Note("leader set to %1")</send>
  </alias>
  <alias
   match="setstab *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setStabAction("%1")</send>
  </alias>
  <alias
   match="settier *"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setTierChar("%1")
Note("Tier set to %1")</send>
  </alias>
  <alias
   match="setwf"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/setWindowFilter()")</send>
  </alias>
  <alias
   match="shapeadd *"
   expand_variables="y"
   group="RaceMiraar"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>addShape("%1")</send>
  </alias>
  <alias
   match="shapeclear"
   expand_variables="y"
   group="RaceMiraar"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>shapeNames = {}
ColourNote("red", "white", "Shape List cleared")</send>
  </alias>
  <alias
   match="shaperem *"
   expand_variables="y"
   group="RaceMiraar"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>remShape("%1")</send>
  </alias>
  <alias
   match="shapeshow"
   expand_variables="y"
   group="RaceMiraar"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>ColourNote("red", "white", "Shape List:")

if shapeNames == nil then
  shapeNames = {}
end

for i = 1, #shapeNames do
  if shapeNames[i] ~= nil then
    ColourNote("red", "white", shapeNames[i])
  end
end</send>
  </alias>
  <alias
   match="showpsi"
   enabled="y"
   expand_variables="y"
   group="Outros"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>showPsiWeapons()</send>
  </alias>
  <alias
   match="showrescue"
   enabled="y"
   expand_variables="y"
   group="autorescue"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>ColourNote("red", "white", "Rescue List:")

if rescuelist == nil then
  rescuelist = {}
end

for i = 1, #rescuelist do
  if rescuelist[i] ~= nil then
    ColourNote("red", "white", rescuelist[i])
  end
end</send>
  </alias>
  <alias
   match="sq"
   enabled="y"
   group="queue"
   send_to="12"
   sequence="100"
  >
  <send>showActionQueue()</send>
  </alias>
  <alias
   match="ssv"
   enabled="y"
   expand_variables="y"
   group="mday"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>sendToAllWorlds("/ssv()")
</send>
  </alias>
  <alias
   match="take"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>
leadership switch take cover</send>
  </alias>
  <alias
   match="ug *"
   enabled="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>ungroup %1</send>
  </alias>
  <alias
   match="vizlimit * *"
   expand_variables="y"
   group="classviz"
   send_to="12"
   keep_evaluating="y"
   sequence="100"
  >
  <send>setVizLimits("%1","%2")</send>
  </alias>
  <alias
   match="wakeresc"
   enabled="y"
   expand_variables="y"
   group="mday"
   keep_evaluating="y"
   sequence="100"
  >
  <send>wake Ica
wake Bid
wake Sombrero
wake Ravengar
wake Lollis
wake Indio
wake Quatro
wake Raposao
wake Xingu</send>
  </alias>
  <alias
   match="wtat"
   enabled="y"
   expand_variables="y"
   group="Outros"
   keep_evaluating="y"
   sequence="100"
  >
  <send>get watermark xmain
wear watermark
n
n
spit</send>
  </alias>
  <alias
   match="xq"
   enabled="y"
   group="queue"
   send_to="12"
   sequence="100"
  >
  <send>execActionQueue()</send>
  </alias>
</aliases>

<!-- timers -->

<timers
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >
  <timer name="autocastarea" second="5.00" offset_second="0.00" group="autoCastArea" >
  <send>ms</send>

  </timer>
  <timer name="autoheal" second="8.00" offset_second="0.00" group="autoHeal" >
  <send>p comf</send>

  </timer>
  <timer name="antiafktimer" enabled="y" minute="3" second="0.00" offset_second="0.00"    send_to="12"
group="antiafk" >
  <send>SendNoEcho("tell")</send>

  </timer>
  <timer name="autopsyphon" minute="1" second="0.00" offset_second="0.00" group="autopsyphon" >
  <send>c psyphon</send>

  </timer>
  <timer name="groupStatsUpdate" enabled="y" second="5.00" offset_second="0.00"    send_to="12"
group="groupStatsUpdate" >
  <send>groupStatsUpdateAction()</send>

  </timer>
</timers>

<!-- macros -->

<macros
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >

  <macro name="up" type="send_now" >
  <send>up</send>

  </macro>

  <macro name="down" type="send_now" >
  <send>down</send>

  </macro>

  <macro name="north" type="send_now" >
  <send>north</send>

  </macro>

  <macro name="south" type="send_now" >
  <send>south</send>

  </macro>

  <macro name="east" type="send_now" >
  <send>east</send>

  </macro>

  <macro name="west" type="send_now" >
  <send>west</send>

  </macro>

  <macro name="examine" type="replace" >
  <send>examine </send>

  </macro>

  <macro name="look" type="replace" >
  <send>look </send>

  </macro>

  <macro name="page" type="replace" >
  <send>page </send>

  </macro>

  <macro name="say" type="replace" >
  <send>say </send>

  </macro>

  <macro name="whisper" type="replace" >
  <send>whisper </send>

  </macro>

  <macro name="doing" type="send_now" >
  <send>DOING</send>

  </macro>

  <macro name="who" type="send_now" >
  <send>WHO</send>

  </macro>

  <macro name="drop" type="replace" >
  <send>drop </send>

  </macro>

  <macro name="take" type="replace" >
  <send>take </send>

  </macro>

  <macro name="F2+Ctrl" type="send_now" >
  <send>go3</send>

  </macro>

  <macro name="logout" type="send_now" >
  <send>LOGOUT</send>

  </macro>

  <macro name="quit" type="send_now" >
  <send>QUIT</send>

  </macro>

  <macro name="F1+Ctrl" type="send_now" >
  <send>go2</send>

  </macro>
</macros>

<!-- variables -->

<variables
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >
  <variable name="currentPlane"></variable>
  <variable name="dverbsIntensity">intensity|viciousness|strength|passion|force|power|might|ferocity|rage|savagery|brutality</variable>
  <variable name="dverbsShort">pathetic|weak|punishing|surprising|amazing|astonishing|mauling|decimating|devastating|pulverizing|maiming|eviscerating|mutilating|disemboweling|dismembering|massacring|mangling|demolishing|obliterating|annihilating|eradicating|vaporizing|destructive|extreme|porcine|divine|daunting|terminal</variable>
  <variable name="gravitasMob"></variable>
  <variable name="groupleader">Cunno</variable>
  <variable name="lastdirmoved"></variable>
  <variable name="monDamList">You</variable>
  <variable name="mw_statusAlts_windowflags">2</variable>
  <variable name="mw_statusAlts_windowmode">0</variable>
  <variable name="mw_statusAlts_windowx">517</variable>
  <variable name="mw_statusAlts_windowy">4</variable>
  <variable name="playerclass">WAR</variable>
  <variable name="playername">Zup</variable>
  <variable name="strOrder">xxxorder</variable>
</variables>

<!-- colours -->

<colours
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >

<ansi>

 <normal>
   <colour seq="1" rgb="black" />
   <colour seq="2" rgb="red" />
   <colour seq="3" rgb="lime" />
   <colour seq="4" rgb="yellow" />
   <colour seq="5" rgb="blue" />
   <colour seq="6" rgb="magenta" />
   <colour seq="7" rgb="cyan" />
   <colour seq="8" rgb="white" />

 </normal>

 <bold>
   <colour seq="1" rgb="gray" />
   <colour seq="2" rgb="red" />
   <colour seq="3" rgb="lime" />
   <colour seq="4" rgb="yellow" />
   <colour seq="5" rgb="blue" />
   <colour seq="6" rgb="magenta" />
   <colour seq="7" rgb="cyan" />
   <colour seq="8" rgb="white" />

 </bold>

</ansi>

<custom>
  <colour seq="1" name="Custom1" text="#FF8080" back="black" />
  <colour seq="2" name="Custom2" text="#FFFF80" back="black" />
  <colour seq="3" name="Custom3" text="#80FF80" back="black" />
  <colour seq="4" name="Custom4" text="#80FFFF" back="black" />
  <colour seq="5" name="Custom5" text="#0080FF" back="black" />
  <colour seq="6" name="Custom6" text="#FF80C0" back="black" />
  <colour seq="7" name="Custom7" text="red" back="black" />
  <colour seq="8" name="Custom8" text="#0080C0" back="black" />
  <colour seq="9" name="Custom9" text="magenta" back="black" />
  <colour seq="10" name="Custom10" text="#804040" back="black" />
  <colour seq="11" name="Custom11" text="#FF8040" back="black" />
  <colour seq="12" name="Custom12" text="teal" back="black" />
  <colour seq="13" name="Custom13" text="#004080" back="black" />
  <colour seq="14" name="Custom14" text="#FF0080" back="black" />
  <colour seq="15" name="Custom15" text="green" back="black" />
  <colour seq="16" name="Custom16" text="blue" back="black" />

</custom>
</colours>

<!-- keypad -->

<keypad
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >

  <key name="0" >
  <send>look</send>
  </key>

  <key name="1" >
  <send>sw</send>
  </key>

  <key name="2" >
  <send>south</send>
  </key>

  <key name="3" >
  <send>se</send>
  </key>

  <key name="4" >
  <send>west</send>
  </key>

  <key name="5" >
  <send>WHO</send>
  </key>

  <key name="6" >
  <send>east</send>
  </key>

  <key name="7" >
  <send>nw</send>
  </key>

  <key name="8" >
  <send>north</send>
  </key>

  <key name="9" >
  <send>ne</send>
  </key>

  <key name="." >
  <send>hide</send>
  </key>

  <key name="/" >
  <send>inventory</send>
  </key>

  <key name="*" >
  <send>score</send>
  </key>

  <key name="-" >
  <send>up</send>
  </key>

  <key name="+" >
  <send>down</send>
  </key>

  <key name="Ctrl+0" >
  </key>

  <key name="Ctrl+1" >
  </key>

  <key name="Ctrl+2" >
  </key>

  <key name="Ctrl+3" >
  </key>

  <key name="Ctrl+4" >
  </key>

  <key name="Ctrl+5" >
  </key>

  <key name="Ctrl+6" >
  </key>

  <key name="Ctrl+7" >
  </key>

  <key name="Ctrl+8" >
  </key>

  <key name="Ctrl+9" >
  </key>

  <key name="Ctrl+." >
  </key>

  <key name="Ctrl+/" >
  </key>

  <key name="Ctrl+*" >
  </key>

  <key name="Ctrl+-" >
  </key>

  <key name="Ctrl++" >
  </key>
</keypad>

<!-- printing -->

<printing
   muclient_version="5.05"
   world_file_version="15"
   date_saved="2019-02-12 13:26:37"
  >

<ansi>

 <normal>

 </normal>

 <bold>
   <style seq="1" bold="y" />
   <style seq="2" bold="y" />
   <style seq="3" bold="y" />
   <style seq="4" bold="y" />
   <style seq="5" bold="y" />
   <style seq="6" bold="y" />
   <style seq="7" bold="y" />
   <style seq="8" bold="y" />

 </bold>

</ansi>
</printing>

<!-- plugins -->
<include name="C:\MUSHCLIENT\WORLDS\PLUGINS\captureChat.xml" plugin="y" />
<include name="C:\MUSHCLIENT\WORLDS\PLUGINS\Reconnecter.xml" plugin="y" />
<include name="AvatarMobNames.xml" plugin="y" />
<include name="C:\MUSHCLIENT\WORLDS\PLUGINS\AvatarAllegs.xml" plugin="y" />
<include name="GMCP_handler_NJG.xml" plugin="y" />
<include name="GMCP_message_receiver_test.xml" plugin="y" />
</muclient>
